{
  "version": 3,
  "sources": ["../../src/runtime/runtime.esm.js"],
  "sourcesContent": ["/*\n * Mesgjs Runtime Interface And Messaging Support\n * Author: Brian Katzung <briank@kappacs.com>\n * Copyright 2025 by Kappa Computer Solutions, LLC and Brian Katzung\n *\n * Wrapping objects (generating message gateways)\n * Sending and receiving messages\n * Defining interfaces and dispatching handlers in response to messages\n */\nimport { calcDigest, getIntegritySHA512 } from './calc-digest.esm.js';\nimport { NANOS, isIndex, parseQJSON, parseSLID } from './vendor.esm.js';\nimport { SieveCache } from './sieve-cache.esm.js';\nimport { unifiedList } from './unified-list.esm.js';\nimport './shim.esm.js';\n\nconst gt = globalThis;\n\n// Flow exception, e.g. @d(return value) throws MsjsFlow('return', value)\nexport class MsjsFlow extends Error {\n    get name () { return 'MsjsFlow'; }\n}\nexport class MsjsFlowError extends RangeError {\n    get name () { return 'MsjsFlowError'; }\n};\n\nexport async function calcIntegrity (src) {\n    return calcDigest(await fetchModule(src, { decode: false }), 'SHA-512');\n}\n\nexport async function fetchModule (src, { decode, integrity } = {}) {\n    let data;\n    if (typeof Deno !== 'undefined' && !src.startsWith('https://') && !src.startsWith('data:')) {\n\tdata = await Deno.readFile(src);\n\tif (!data) throw new Error(`fetchModule: File \"${src}\" not found`);\n    } else {\n\tdata = await fetch(src).then(r => {\n\t    if (r.ok) {\n\t\treturn r.arrayBuffer();\n\t    }\n\t    throw new Error(`fetchModule: File \"${src}\" not found`);\n\t});\n    }\n    if (integrity && await calcDigest(data, 'SHA-512') !== integrity) return new Error(`fetchModule: File \"${src}\" integrity verification failed`);\n    return ((decode === false) ? data : new TextDecoder().decode(data));\n}\n\n// listFromPairs is the runtime shortcut ls([]) (NANOS generator)\nexport const listFromPairs = pa => new NANOS().fromPairs(pa);\n\n// Types to show in place of values during dispatch/stack traces\nexport function loggedType (v) {\n    if (v?.msjsType) return 'M.' + v.msjsType;\n    const jt = typeof v;\n    switch (jt) {\n    case 'boolean': return (v ? '@t' : '@f');\n    case 'undefined': return '@u';\n    case 'object':\n\tif (v === null) return '@n';\n\treturn 'J.' + (v?.constructor?.name || 'Object');\n    default: return 'J.' + jt;\n    }\n}\n\n// namespaceAt is the runtime shortcut na(...) (NANOS .at)\nexport function namespaceAt  (namespace, key, opt) {\n    if (namespace?.has && namespace.has(key)) return namespace.at(key);\n    if (!opt) throw new ReferenceError(`Required key \"${key}\" not found`);\n}\n\n// Get the return value if @code, or the raw value otherwise\nexport const runIfCode = v => v?.msjsType === '@code' ? v('run') : v;\n// Run @code chains until reaching a non-@code value\nexport function runWhileCode (v) {\n    while (v?.msjsType === '@code') v = v('run');\n    return v;\n}\n\n// Send an anonymous message (promoting JS receiver objects as necessary)\nexport function sendAnonMessage (rr, op, mp) {\n    if (!rr?.msjsType) rr = gt.$toMsjs(rr);\n    return rr(op, mp);\n}\n\n// Return a message sender's source file/line/column\nexport function senderFLC () {\n    const stack = (new Error().stack || '').split('\\n');\n    // Discard stack frames through the object's msjsR$ receiver (public i/f fn)\n    while (stack.length) if (/msjsR\\$/.test(stack.shift())) break;\n    // Also discard sender's msjsS$ frames for attributed messages\n    while (/msjsS\\$/.test(stack[0])) stack.shift();\n    const srFrame = stack[0] || '';\n    const match = srFrame.match(/[@(](.*):(\\d+):(\\d+)/) ||\n\tsrFrame.match(/(?:^|\\s+)at\\s+(.*):(\\d+):(\\d+)$/);\n    if (match) return { file: match[1], line: parseInt(match[2]), column: parseInt(match[3]) };\n}\n\n// Set a read-only object property or properties\n// setRO(obj, key, value, enumerable = true)\n// setRO(obj, { map }, enumerable = true)\nconst sROProp = { writable: false, configurable: false };\nexport const setRO = (o, ...a) => {\n    if (typeof a[0] === 'object') {\n\tconst [map, enumerable = true] = a;\n\tsROProp.enumerable = enumerable;\n\tfor (const k of Object.keys(map)) {\n\t    sROProp.value = map[k];\n\t    Object.defineProperty(o, k, sROProp);\n\t}\n    } else {\n\tconst [key, value, enumerable = true] = a;\n\t[ sROProp.value, sROProp.enumerable ] = [ value, enumerable ];\n\tObject.defineProperty(o, key, sROProp);\n    }\n    return o;\n};\n\nexport function throwFlow (d, type, ifName) {\n    const { js, mp } = d;\n    if (!js.active) throw new MsjsFlowError(`(${type}) to inactive ${ifName}`);\n    js.capture = true;\n    if (mp.has('result')) {\n\tjs.hasFlowRes = true;\n\tjs.flowRes = mp.at('result');\n    }\n    throw new MsjsFlow(type);\n}\n\nconst hasOwn = Object.hasOwn;\n\n//////////////////////////////////////////////////////////////////////\n// START Of Code/Interface/Messaging Protected Zone\n//////////////////////////////////////////////////////////////////////\nexport const {\n    debugConfig,\n    fcheck,\n    fready,\n    fwait,\n    getInstance,\n    getInterface,\n    getModMeta,\n    initialize,\n    loadModule,\n    logInterfaces,\n    modHasCap,\n    moduleScope,\n    setModMeta,\n    typeAccepts,\n    typeChains,\n} = (() => {\n    let codeBaton, mesgBaton, nextAnon = 0, nextUCID = 0, initPhase = 2, dispNo = 0;\n    const getCode = Symbol('getCode'), initSym = Symbol('@init');\n    const interfaces = Object.create(null), firstInit = [];\n    const dbgCfg = Object.setPrototypeOf({\n\tdispatch: false, dispatchSource: false, dispatchTypes: false,\n\tstack: 0, stackSource: false, stackTypes: false,\n    }, null), stack = [], hdr = '-- Mesgjs Dispatch Stack --';\n    const handlerCache = new SieveCache(1024);\n    const dacHandMctx = { st: '@core', rt: '@core', sm: sendAnonMessage };\n    const features = new Map();\n    const modMeta = new NANOS(), modMap = new Map(), modLoaded = new Set();\n    const modMidToName = new Map();\n\n    // Add features from a string / array / list\n    function addFeatures (featureList) {\n\tif (typeof featureList === 'string') {\n\t    featureList = featureList.split(/\\s+/).filter(Boolean);\n\t}\n\tif (typeof featureList?.values !== 'function') return;\n\tfor (const feature of featureList.values()) {\n\t    if (!features.has(feature)) {\n\t\tconst prom = getInstance('@promise');\n\t\tprom.catch(() => console.warn(`loadModule: Feature \"${feature}\" rejected`));\n\t\tfeatures.set(feature, prom);\n\t    }\n\t}\n    }\n\n    // Add some or all of our Mesgjs stack trace to the JS one\n    function appendStackTrace (e) {\n\tif (!stack.length || !e.stack?.includes || e.stack.includes(hdr)) return;\n\tconst frames = [], stop = dbgCfg.stack;\n\tlet down = stack.length;\n\tfor (let up = 0; --down >= 0; ) {\n\t    const curFrm = stack[down], disp = curFrm.disp;\n\t    const dispOp = (typeof disp.op === 'symbol') ? 'J.Symbol' : disp.op;\n\t    frames.push(`${disp.st} => ${disp.rt}(${dispOp}${fmtDispParams(dbgCfg.stackTypes, disp.mp)})${fmtDispSrc(dbgCfg.stackSource,curFrm)}`);\n\t    if (++up === stop) break;\n\t}\n\tif (down >= 0) frames.push('[...]');\t// Config stopped us early\n\te.stack += '\\n' + hdr + '\\n' + frames.join('\\n');\n    }\n\n    // Bind a code template to a dispatch object and save it\n    function bindCode (tpl, disp) {\n\tif (tpl.ucid === undefined) setRO(tpl, 'ucid', nextUCID++);\n\treturn ((disp._bc ||= [])[tpl.ucid] ||= newMsjsCode(tpl.cd, disp));\n    }\n\n    /*\n     * Return canonical message properties\n     * sr, st, rr, rt, op, mp, hasElse, elseExpr\n     *\n     * - Checks (and clears) the message baton\n     * - Processes (NANOS or plain JS object) list-op messages\n     */\n    function canMesgProps(ctx, checkBaton = true) {\n\tlet sr, st, smi, { rr, rt, op, mp } = ctx, hasElse = false, elseExpr;\n\tif (checkBaton) {\n\t    const mb = mesgBaton;\n\t    mesgBaton = undefined;\n\t    if (op === undefined && mb?.rr === rr) ({ sr, st, op, mp } = mb);\n\t}\n\tif (op instanceof NANOS) op = op.storage;\n\tif (typeof op === 'object') {\t// List-op message\n\t    const hp = prop => hasOwn(op, prop);\n\t    if (hp('else')) [hasElse, elseExpr] = [true, op.else];\n\t    if (hp('mid')) {\n\t\tconst moduleName = modMidToName.get(op.mid);\n\t\tif (moduleName) smi = moduleName;\n\t    }\n\t    if (hp('params')) mp = op.params;\n\t    if (hp('op')) op = op.op;\n\t    else if (hp('0')) op = op[0];\n\t    else throw new SyntaxError('Missing operation in Mesgjs list-op message');\n\t}\n\tif (!(mp instanceof NANOS)) mp = new NANOS(mp ?? []);\n\treturn { sr, st, smi, rr, rt, op, mp, hasElse, elseExpr };\n    }\n\n    // Core version of getInstance (works with public interfaces)\n    function coreGetInstance (type, mp) {\n\tconst ix = interfaces[type];\n\tif (ix && !ix.private) return getInstance(type, mp);\n    }\n\n    // Optionally set, and then return, debugging configuration\n    function debugConfig (set) {\n\tset = unifiedList(set);\n\tfor (const k of Object.keys(dbgCfg)) {\n\t    const type = typeof dbgCfg[k];\n\t    switch (type) {\n\t    case 'boolean':\n\t\tif (set?.has?.(k)) dbgCfg[k] = !!set.at(k);\n\t\tbreak;\n\t    case 'number':\n\t    {\n\t\tconst v = set?.at?.(k);\n\t\t// deno-lint-ignore valid-typeof\n\t\tif (typeof v === type) dbgCfg[k] = v;\n\t\tbreak;\n\t    }\n\t    }\n\t}\n\treturn new NANOS(dbgCfg);\n    }\n\n    // Shared JS getters & methods for @dispatch interface functions\n    const dispProto = Object.setPrototypeOf({\n\t// Return code bound to this dispatch\n\tb (tpl) { return bindCode(tpl, this); },\n\tget js () { return this.octx.js; },\n\t// JIT persistent storage NANOS\n\tget p () { return this.octx.ps ??= new NANOS(); },\n\tget msjsType () { return '@dispatch'; },\n\t// JIT transient (scratch) storage NANOS\n\tget t () { return this._ts ??= new NANOS(); },\n    }, Object.getPrototypeOf(Function));\n\n    // Dispatch a handler, passing it a fresh @dispatch object\n    function dispatchHandler (mctx, dhctx, mp) {\n\tconst { sr, st, smi, rr, rt } = mctx; // message context\n\tconst { op, octx, handler, sm } = dhctx; // dH context\n\n\t/*\n\t * As part of the messaging pathway, dispatch objects have custom\n\t * receiver functions.\n\t */\n\tconst bfnThis = {}, disp = bfnThis.bfn = Object.setPrototypeOf(msjsR$Dispatch.bind(bfnThis, mctx, dhctx, mp), dispProto);\n\tdisp.dop = op;\n\tdisp.ht = handler.type;\n\tdisp.mop = mctx.op;\n\tdisp.mp = mp;\n\tdisp.octx = octx;\n\tdisp.rr = rr;\n\tdisp.rt = rt;\n\tdisp.sm = sm;\n\tdisp.sr = sr;\n\tdisp.st = st;\n\tdisp.smi = smi;\n\n\tconst trace = dbgCfg.stack, thisDisp = dbgCfg.dispatch && (dispNo++).toString(16);\n\ttry {\n\t    if (dbgCfg.dispatch) {\n\t\tconst dispOp = (typeof op === 'symbol') ? 'J.Symbol' : op;\n                const lst = loggedType(st);\n\t\tconsole.log(`[Mesgjs dispatch ${thisDisp}] ${lst} => ${rt}${handler.type === rt ? '' : ('/' + handler.type)}(${dispOp}${fmtDispParams(dbgCfg.dispatchTypes, disp.mp)})${fmtDispSrc(dbgCfg.dispatchSource)}`);\n\t    }\n\t    if (trace) stack.push({ disp, ...(dbgCfg.stackSource && senderFLC() || {}) });\n\t    const result = handler.code(disp);\n\t    if (thisDisp !== false) console.log(`[Mesgjs return ${thisDisp}]${fmtDispParams(dbgCfg.dispatchTypes, [ result ])}`);\n\t    return result;\n\t}\n\tcatch (e) {\n\t    if (disp._capture && e instanceof MsjsFlow) {\n\t\tdisp._capture = false;\n\t\tif (thisDisp !== false) console.log(`[Mesgjs return ${thisDisp}]${fmtDispParams(dbgCfg.dispatchTypes, [ e.info ])}`);\n\t\treturn e.info;\n\t    }\n\t    if (thisDisp !== false) console.warn(`[Mesgjs exception ${thisDisp}]`, e);\n\t    if (trace && !(e instanceof MsjsFlow)) appendStackTrace(e);\n\t    throw e;\n\t}\n\tfinally {\n\t    if (trace) stack.pop();\n\t}\n\t// Not reached\n    }\n\n    // Handle an incoming message's first dispatch\n    function dispatchMessage (mctx, dctx) {\n\tconst cmp = canMesgProps(mctx);\n\tconst { st, rr, rt, op, mp, hasElse, elseExpr } = cmp;\n\tconst { octx, handler = getHandler(rt, op) } = dctx;\n\n\tif (!handler) {\n\t    if (dbgCfg.dispatch) console.log(`[Mesgjs dispatch] ${st} => ${rt}(${op}) [NO HANDLER]${fmtDispSrc(dbgCfg.dispatchSource)}`);\n\t    if (hasElse) return runIfCode(elseExpr);\n\t    throw new TypeError(`No Mesgjs handler found for \"${rt}(${op})\"`);\n\t}\n\n\t// Send-message function (shared across all dispatches)\n\tconst sm = msjsS$SendMessage.bind({ sr: rr, st: rt });\n\n\t// Dispatch the initial handler and return its result\n\treturn dispatchHandler(cmp, { octx, op, handler, sm }, mp);\n    }\n    firstInit.push(() => {\n\tgetInterface('@dispatch').set({ pristine: true, private: true, lock: true });\n\tstub('@dispatch', 'ht', 'js', 'op', 'redis', 'return', 'rr', 'rt', 'sr', 'st', 'smi');\n    });\n\n    // Return flattened chain set by interface type\n    function flatChain (type) {\n\tconst ix = interfaces[type];\n\tif (!ix) return new Set();\n\tlet fc = ix.flatChain;\n\tif (!fc) {\n\t    fc = new Set([type]);\n\t    for (const nxt of ix.chain) if (!fc.has(nxt)) fc = fc.union(flatChain(nxt));\n\t    ix.flatChain = fc;\n\t}\n\treturn fc;\n    }\n\n    // Format dispatch message parameter types\n    function fmtDispParams (inc, list) {\n\tif (!inc) return '';\n\treturn [...unifiedList(list).entries()].map(en => (isIndex(en[0]) ? ` ${loggedType(en[1])}` : ` ${en[0]}=${loggedType(en[1])}`)).join('');\n    }\n\n    // Format a dispatched message source file / line / column\n    function fmtDispSrc (inc, flc) {\n\tif (inc) {\n\t    if (!flc) flc = senderFLC();\n\t    if (flc?.line !== undefined) return ` at ${flc.file}:${flc.line}:${flc.column}`;\n\t}\n\treturn '';\n    }\n\n    // Non-blocking feature check\n    function fcheck (f) {\n\tswitch (features.get(f)?.state) {\n\tcase 'pending': return false;\t// @f: not ready\n\tcase 'fulfilled': return true;\t// @t: ready\n\t}\n\t// no such feature, or mod load rejected: @u\n    }\n\n    // Wait for a list of features to be ready\n    function fwait (...list) {\n\tconst prom = getInstance('@promise'), proms = [];\n\tprom.catch(() => {});\n\tfor (const f of list) if (features.has(f)) proms.push(features.get(f));\n\treturn prom.all(proms);\n    }\n\n    // Mark a feature ready (if module is authorized)\n    function fready (mid, feature) {\n\tconst meta = modMap.get(mid);\n\tif (meta?.at('featpro')?.includes(feature) || modMeta.at('testMode')) {\n\t    features.get(feature)?.resolve();\n\t}\n    }\n\n    /*\n     * Try to locate a specific or default handler for a type and operation.\n     * Returns {code, type, op}.\n     */\n    function getHandler (type0, op, next = false) {\n\tconst noopHandler = { code: () => {}, type: type0, op };\n\t// Ignore (no-op) @init outside of getInstance\n\tif (op === '@init') return noopHandler;\n\tif (op === initSym) op = '@init';\n\tconst cacheKey = typeof type0 === 'string' && typeof op === 'string' && `${type0}(${op})`, hit = cacheKey && handlerCache.get(cacheKey);\n\tif (hit) return hit;\n\n\tconst handler = getHandler2(type0, op, next, noopHandler);\n\tconst cacheable =\n\t    ((!cacheKey || !handler || !interfaces[handler.type].locked) ? false :\n\t    ((handler.code.cache !== undefined) ? handler.code.cache :\n\t    (handler.op !== op || handler.type !== type0)));\n\tif (cacheable) handlerCache.set(cacheKey, handler, handler.code.cache === 'pin' && handler.type === type0);\n\treturn handler;\n    }\n    function getHandler2 (type0, op, next, noopHandler) {\n\tlet dacHand, defHand;\n\tfor (const type of flatChain(type0)) {\n\t    if (next && type === type0) continue;\n\t    const ix = interfaces[type], code = ix?.handlers[op];\n\t    if (code) return { code, type, op };\n\t    if (ix && !defHand) {\n\t\tif (!dacHand) {\n\t\t    const op = '@defacc', code = ix.handlers[op];\n\t\t    if (code) dacHand = { code, type, op };\n\t\t}\n\t\tconst op = '@default', code = ix.handlers[op];\n\t\tif (code) defHand = { code, type, op };\n\t    }\n\t}\n\t// Use no-op as the special default for @init\n\tif (op === '@init') return noopHandler;\n\t// @defacc can moderate what @default accepts\n\tif (defHand && dacHand && !dispatchHandler(dacHandMctx, { op: '@defacc', octx: {}, handler: dacHand }, { op, type: defHand.type })) return;\n\treturn defHand;\n    }\n\n    /*\n     * Return a new object instance of the specified type.\n     * The JS initializer is called if one is configured in the interface.\n     */\n    function getInstance (type, mp) {\n\tconst ix = interfaces[type];\n\tif (!ix) throw new TypeError(`Cannot get instance for unknown Mesgjs interface \"${type}\"`);\n\tif (ix.instance) return ix.instance;\n\tconst octx = Object.create(null), pi = function msjsR$Object (op, mp) { return dispatchMessage({ rr: pi, rt: type, op, mp }, { octx }); };\n\tsetRO(pi, 'msjsType', type);\n\tif (ix.singleton) ix.instance = pi;\n\tix.refd = true;\n\tif (!(mp instanceof NANOS)) mp = new NANOS(mp ?? []);\n\tpi(initSym, mp);\n\treturn pi;\n    }\n\n    /*\n     * Return a Msjs interface management object.\n     * As part of the foundation for the object messaging system, it uses\n     * a custom message receiver function.\n     */\n    function getInterface (name) {\n\tif (name === ':?') name = ':?' + nextAnon++;\n\telse if (typeof name !== 'string' || !name || (name.startsWith(':?') && !interfaces[name]) || (name[0] === '@' && initPhase !== 1)) return;\n\tconst ix = interfaces[name], isFirst = !ix;\n\tif (isFirst) interfaces[name] = {\n\t    handlers: Object.create(null), chain: new Set([]), refd: false,\n\t    abstract: false, final: false, locked: false,\n\t    once: false, pristine: true, singleton: false\n\t};\n\tif (ix?.once) return;\n\tconst bfnThis = { name, isFirst }, bfn = bfnThis.bfn = msjsR$Interface.bind(bfnThis);\n\treturn setRO(bfn, {\n\t    ifName: name,\n\t    set: mp => setInterface(name, mp, isFirst),\n\t    instance: mp => getInstance(name, mp),\n\t    msjsType: '@interface',\n\t});\n    }\n    firstInit.push(() => {\n\tgetInterface('@interface').set({ pristine: true, private: true, lock: true });\n\tstub('@interface', 'instance', 'name', 'set');\n    });\n\n    // Return the current modMeta (if configured)\n    function getModMeta () {\n\t// Never give access to unfrozen modMeta!\n\treturn Object.isFrozen(modMeta) ? modMeta : undefined;\n    }\n\n   // Determine next-level message params for redispatch\n    function getRDMP (mp) {\n\tconst raw = mp.at('params', mp);\n\treturn ((raw instanceof NANOS) ? raw : new NANOS(raw ?? []));\n    }\n\n    // Initialize the runtime environment (e.g. load core, core extensions)\n    function initialize (installer) {\n\tif (initPhase === 2) {\t\t// Only initialize once\n\t    initPhase = 1;\n\t    firstInit.forEach(cb => cb());\n\t    installer();\n\t    initPhase = 0;\n\t    dacHandMctx.sr = dacHandMctx.rr = gt.$c;\n\t}\n    }\n\n    async function loadModule (module) {\n\t// Prevent reload by source\n\tif (modLoaded.has('mod-' + module)) return;\n\tmodLoaded.add('mod-' + module);\n\n\tconst meta = modMeta.at('modules')?.at(module);\n\tconst integrity = meta.at('integrity', '');\n\tconst expect = (integrity === 'DISABLED') ? '' : getIntegritySHA512(integrity);\n\tif (expect) {\n\t    // Prevent reload by signature\n\t    if (modLoaded.has(expect)) return;\n\t    modLoaded.add(expect);\n\t} else {\n\t    if (globalThis.msjsHasModMeta && integrity !== 'DISABLED') {\n\t\tconst err = new Error(`loadModule: Refusing unverified module \"${module}\"`);\n\t\tconsole.error(err.message);\n\t\treturn err;\n\t    }\n\t    console.warn(`loadModule WARNING: Module \"${module}\" is unverified`);\n\t}\n\n\tconst fetchURL = remapModURL(module, meta);\n\tlet code, importURL;\n\tconst mid = Symbol();\n\tmodMidToName.set(mid, module);\n\ttry {\n\t    code = await fetchModule(fetchURL, { integrity: expect });\n\t    if (meta) {\n\t\tif (expect) modMap.set(expect, meta);\n\t\tmodMap.set(mid, meta);\n\t    }\n\n\t    const importURL = (typeof Blob === 'function' && typeof URL?.createObjectURL === 'function') ?\n\t\tURL.createObjectURL(new Blob([ new TextEncoder().encode(code) ], { type: 'application/javascript' })) :\n\t\t`data:application/javascript;base64,${btoa(code)}`;\n\t    const mod = await import(importURL);\n\t    if (globalThis.msjsHasModMeta && mod.loadMsjs) mod.loadMsjs(mid);\n\t} catch (err) {\n\t    console.error(`loadModule \"${module}\" failed: ${err.message}`);\n\t    // Reject this module's features, if any\n\t    for (const feature of meta?.at('featpro')?.values() || []) {\n\t\tfeatures.get(feature)?.reject(code);\n\t    }\n\t    return err;\n\t} finally {\n\t    if (importURL?.startsWith('blob:')) URL.revokeObjectURL(importURL);\n\t}\n    }\n\n    function logInterfaces () { console.log(interfaces); }\n\n    // Determine whether a module has a capability\n    function modHasCap (module, cap) {\n\tconst caps = modMeta?.at(['modules', module, 'modcaps']) || [];\n\treturn caps.includes(cap);\n    }\n\n    // Return a module dispatch object\n    function moduleScope () {\n\tconst m = function msjsR$Module () {}, d = function msjsR$Dispatch (op) {\n\t    ({ op } = canMesgProps({ rr: d, op }));\n\t    switch (op) {\n\t    case 'op': return 'load';\n\t    case 'rr': case 'sr': return m;\n\t    case 'rt': case 'st': return '@module';\n\t    // Quietly ignore other messages\n\t    }\n\t};\n\tlet per, tra;\t// JIT persistent, transient storage\n\tconst b = tpl => bindCode(tpl, d), sm = msjsS$SendMessage.bind({ sr: m, st: '@module' }), getPer = () => (per ??= new NANOS()), getTra = () => (tra ??= new NANOS());\n\tsetRO(m, 'msjsType', '@module');\n\tObject.defineProperties(m, {\n\t    p: { get: getPer, enumerable: true },\n\t    t: { get: getTra, enumerable: true },\n\t});\n\tsetRO(d, {\n\t    sr: m, st: '@module', rr: m, rt: '@module', msjsType: '@dispatch',\n\t    octx: gt.$u, op: 'load', mp: gt.$u, b, sm,\n\t});\n\tObject.defineProperties(d, {\n\t    p: { get: getPer, enumerable: true },\n\t    t: { get: getTra, enumerable: true },\n\t});\n\treturn { d, m,\n\t    ls: listFromPairs,\n\t    na: namespaceAt,\n\t};\n    }\n    firstInit.push(() => {\n\tgetInterface('@module').set({ pristine: true, private: true, lock: true });\n    });\n\n    // Return a new Msjs @code object given code and a dispatch\n    function newMsjsCode (cd, od) {\n\t// Encapsulate the code with a custom receiver function (public i/f)\n\tconst bfnThis = { cd, od }, bfn = bfnThis.bfn = msjsR$Code.bind(bfnThis);\n\treturn setRO(bfn, 'msjsType', '@code');\n    }\n\n    // Return a new Msjs @function object given code and state\n    function newMsjsFunction (cd, ps) {\n\tconst type = '@function', octx = {};\n\tconst bfnThis = { octx, op: 'call', handler: { code: cd, type, op: 'call' } };\n\tif (ps !== undefined) setRO(octx, 'ps', ps);\n\tconst bfn = bfnThis.bfn = msjsR$Function.bind(bfnThis);\n\tbfnThis.sm = msjsS$SendMessage.bind({ sr: bfn, st: type });\n\treturn setRO(bfn, 'msjsType', type);\n    }\n    firstInit.push(() => {\n\tgetInterface('@code').set({ pristine: true, private: true, lock: true,\n\t    handlers: {\n\t\trun: false, fn: false,\n\t    },\n\t});\n\tgetInterface('@function').set({ pristine: true, private: true, lock: true,\n\t    handlers: {\n\t\tcall: false, fn: false,\n\t    },\n\t});\n\tgetInterface('@handler').set({ pristine: true, private: true, lock: true });\n    });\n\n    // Process module entries.\n    function processModules (mods) {\n\tconst listify = (base, key, sep = /[\\s,]+/) => {\n\t    const value = base.at(key);\n\t    if (typeof value === 'string') {\n\t\tbase.set(key, new NANOS(value.split(sep).filter(Boolean)));\n\t    }\n\t};\n\tfor (const [_modPath, modInfo] of mods?.namedEntries() || []) {\n\t    const integrity = modInfo.at('integrity');\n\t    listify(modInfo, 'featpro');\n\t    listify(modInfo, 'featreq');\n\t    listify(modInfo, 'modcaps');\n\t    if (integrity !== 'DISABLED' && !getIntegritySHA512(integrity)) continue;\n\t    const features = modInfo?.at('featpro', []);\n\t    addFeatures(features);\n\t}\n    }\n\n    // Use modMeta to remap the module source location\n    function remapModURL (src, meta) {\n\t// Use an exact URL if one was provided\n\tconst url = meta?.at('url');\n\tif (url) return url;\n\n\t// Revise based on prefix mapping\n\tconst prefixMap = modMeta.at('prefixMap');\n\tlet best = [ '', 0 ];\n\tfor (const [ input, output ] of prefixMap.entries()) {\n\t    const len = input.length;\n\t    if (len > best[1] && src.startsWith(input)) best = [ output, len ];\n\t}\n\tsrc = best[0] + src.substring(best[1]);\n\n\t// /base + version => /base/major/base@version\n\tconst version = meta?.at('version'), [ , major ] = version && version.match(/(\\d+)/) || [];\n\tif (version && major !== undefined) {\n\t    const [ , dir, base ] = src.match(/(.*\\/)?(.*)(?:(?:\\.esm)?\\.js)?$/);\n\t    src = `${dir}${base}/${major}/${base}@${version}`;\n\t}\n\n\tif (!src.endsWith('.js')) src += '.esm.js';\n\treturn src;\n    }\n\n    // Prototype @code receiver\n    function msjsR$Code (op0, mp0) {\n\tconst cmp = canMesgProps({ rr: this.bfn, op: op0, mp: mp0 }), { op, mp, hasElse, elseExpr } = cmp;\n\t// Fast-track (run) message\n\tif (op === 'run') return this.cd(this.od);\n\tswitch (op) {\t// Standard-mode ops\n\tcase initSym: return;\n\tcase getCode:\n\t    codeBaton = { code: this.cd }; // JS function for interface\n\t    return;\n\tcase 'fn':\t\t\t// Return new function code block\n\t    return newMsjsFunction(this.cd, mp);\n\t}\n\tif (hasElse) return runIfCode(elseExpr);\n\tthrow new TypeError(`No Mesgjs handler found for \"@code(${op})\"`);\n    }\n\n    /*\n     * Prototype @dispatch receiver\n     * Accepts original message context, dispatch context, and\n     * dispatched message params.\n     */\n    function msjsR$Dispatch (mctx, dhctx, _dmp) {\n\t// Note: op/mp here is for the d(message), not the original (mctx)\n\tconst { op, mp, elseExpr } = canMesgProps({ rr: this.bfn });\n\tconst { octx, handler, sm } = dhctx;\n\tswitch (op) {\n\tcase 'dop': return dhctx.op;\t// Current dispatch REQUESTED op\n\tcase 'ht': return handler.type;\n\tcase 'js': return octx.js;\t// JavaScript state\n\tcase 'log':\t\t// Log the entire dispatch to the console\n\t    console.dir(this.bfn, { depth: null });\n\t    return;\n\tcase 'mop': return mctx.op;\t// Original message requested op\n\tcase 'redis':\t\t// Redispatch\n\t{\n\t    // Accept either list-op or mp else parameter\n\t    const dispElse = mp.has('else') ? mp.at('else') : elseExpr;\n\t    // Optionally choose a specific type from the chain\n\t    const type = mp.at('type') || handler.type;\n\t    // The type must be in *current* handler's chain\n\t    if (!flatChain(handler.type).has(type)) return runIfCode(dispElse);\n\t    // Optionally change op and/or mp\n\t    const rdop = mp.has('op') ? mp.at('op') : handler.op, rdmp = getRDMP(mp), redis = getHandler(type, rdop, type === handler.type && rdop === handler.op);\n\t    // Don't allow switch to default if not changing op\n\t    if (!redis || (!mp.has('op') && redis.op !== rdop)) return runIfCode(dispElse);\n\t    // Looks good; fire the redispatch\n\t    return dispatchHandler(mctx, { octx, op: rdop, handler: redis, sm }, rdmp);\n\t}\n\tcase 'return':\n\t    this.bfn._capture = true;\n\t    throw new MsjsFlow('return', mp.at(0));\n\t    // Not reached\n\tcase 'rr': return mctx.rr;      // Receiver\n\tcase 'rt': return mctx.rt;      // Receiver type\n\tcase 'sr': return mctx.sr;      // Sender\n\tcase 'st': return mctx.st;      // Sender type\n\tcase 'smi': return mctx.smi;    // Sending-module identifier\n\t}\n\treturn runIfCode(elseExpr);\n    }\n\n    // Prototype @function receiver\n    function jsFnCall (...mp) { return this.bfn('call', new NANOS([...mp])); }\n    function msjsR$Function (op0, mp0) {\n\tconst cmp = canMesgProps({ rr: this.bfn, op: op0, mp: mp0 });\n\tconst { op, mp, hasElse, elseExpr } = cmp;\n\t// Fast-track (call) message\n\tif (op === 'call') return dispatchHandler(cmp, this, mp);\n\tswitch (op) {\t\t// Function-mode ops\n\tcase 'fn':\t\t\t// Return a new function code block\n\t    return newMsjsFunction(this.handler.code, mp);\n\tcase 'jsfn':\t\t// Return a JS wrapper-function\n\t    return (this.jsFn ||= jsFnCall.bind(this));\n\t}\n\tif (hasElse) return runIfCode(elseExpr);\n\tthrow new TypeError(`No Mesgjs handler found for \"@function(${op})\"`);\n    }\n\n    // Prototype @interface receiver\n    function msjsR$Interface (op0, mp0) {\n\tconst name = this.name, { op, mp, hasElse, elseExpr } = canMesgProps({ rr: this.bfn, op: op0, mp: mp0 });\n\tswitch (op) {\n\tcase 'instance': return getInstance(name, mp);\n\tcase 'name': return name;\n\tcase 'set': return setInterface(name, mp, this.isFirst);\n\t}\n\tif (hasElse) return runIfCode(elseExpr);\n\tthrow new TypeError(`No Mesgjs handler found for \"@interface(${op})\"`);\n    };\n\n    /*\n     * Prototype private send-message function\n     * Promote JS receiver objects to Mesgjs, if necessary, and deliver an\n     * attributed message via the message baton.\n     */\n    function msjsS$SendMessage (rr, op, mp) {\n\tif (!rr?.msjsType) rr = gt.$toMsjs(rr);\n\tmesgBaton = { sr: this.sr, st: this.st, rr, op, mp };\n\tlet result;\n\ttry { result = rr(); }\n\tfinally { mesgBaton = undefined; }\n\treturn result;\n    }\n\n    /*\n     * Interface-object implementation to set/change a Msjs object interface\n     *\n     * Parameters:\n     * - abstract - The interface is incomplete and cannot be instantiated\n     * - chain - Sets an ordered chain of super-class interfaces\n     * - final - The interface is final and cannot be chained\n     * - handlers - Message operation handlers to be added\n     * - lock - Lock out future setInterface calls\n     * - once - Prevents returning the interface again and throws an\n     *       error if returned before\n     * - pristine - Throw an error if not the first configuration\n     * - private - The interface is private (instances may only be generated\n     *       via the interface object, not through the core)\n     */\n    function setInterface (name, mp, isFirst) {\n\tif (name[0] === '@' && initPhase !== 1) throw new TypeError(`Cannot configure Mesgjs interface \"${name}\" after runtime initialization`);\n\tconst ix = interfaces[name];\n\tif (mp instanceof NANOS) mp = mp.storage;\n\tif ((mp.once && !isFirst) || (mp.pristine && !ix.pristine)) throw new TypeError(`Mesgjs interface \"${name}\" is not pristine`);\n\tix.pristine = false;\n\tif (ix.locked) throw new TypeError(`Cannot change locked Mesgjs interface \"${name}\"`);\n\n\t// Set the interface chain. Refd guarantees an acyclic graph.\n\tif (mp.chain) {\n\t    if (ix.chain.size) throw new TypeError(`Cannot change chain for Mesgjs interface \"${name}\"`);\n\t    if (ix.refd) throw new TypeError(`Cannot set chain for active Mesgjs interface \"${name}\"`);\n\t    const chain = new Set(Object.values(mp.chain.storage || mp.chain || []));\n\t    for (const item of chain) {\n\t\tif (!interfaces[item]) throw new ReferenceError(`Mesgjs interface \"${name}\" references unknown interface \"${item}\"`);\n\t\tif (interfaces[item].final) throw new TypeError(`Mesgjs interface \"${name}\" tries to extend final interface \"${item}\"`);\n\t\tinterfaces[item].refd = true;\n\t    }\n\t    ix.chain = chain;\n\t}\n\n\t/*\n\t * Add message handlers. These can be either foundational JavaScript\n\t * implementation functions or Mesgjs code blocks.\n\t */\n\tconst opHandlers = mp.handlers || {};\n\tfor (const [ op, handler ] of (opHandlers instanceof NANOS) ? opHandlers.entries() : Object.entries(opHandlers)) {\n\t    if (typeof handler === 'function') {\n\t\tif (handler.msjsType === '@code') {\n\t\t    codeBaton = undefined;\n\t\t    handler(getCode);\n\t\t    if (codeBaton?.code) setRO(ix.handlers[op] = codeBaton.code, 'msjsType', '@handler');\n\t\t}\n\t\telse ix.handlers[op] = handler;\n\t    } else if (handler === false) ix.handlers[op] = false;\n\t}\n\tcodeBaton = undefined;\n\n\tconst cacheHints = mp.cacheHints || {};\n\tfor (const [ op, hint ] of (cacheHints instanceof NANOS) ? cacheHints.entries() : Object.entries(cacheHints)) {\n\t    switch (hint) {\n\t    case true: case false: case 'pin':\n\t\tif (ix.handlers[op]) ix.handlers[op].cache = hint;\n\t\tbreak;\n\t    }\n\t}\n\n\tif (mp.init) ix.init = mp.init;\t// JS instance-init function\n\tif (mp.abstract) ix.abstract = true;\n\tif (mp.final) ix.final = true;\n\tif (mp.lock) ix.locked = true;\n\tif (mp.once) ix.once = true;\n\tif (mp.singleton) ix.singleton = true;\n    }\n\n    // Set module metadata (once) from a plain object or NANOS\n    function setModMeta (meta) {\n\tif (globalThis.msjsHasModMeta) return;\t// Already set\n\n\t// Deep copy from NANOS or plain object config\n\tif (meta instanceof NANOS) modMeta.push(parseSLID(meta.toSLID()));\n\telse if (typeof meta === 'object') modMeta.push(parseQJSON(JSON.stringify(meta)));\n\telse return;\n\n\tsetRO(globalThis, {\n\t    msjsHasModMeta: true,\t// Module metadata added\n\t    msjsNoSelfLoad: true,\t// Turn off module self-loading\n\t});\n\n\t// Track features provided by modules (or test mode)\n\tprocessModules(modMeta.at('modules'));\n\tif (modMeta.at('testMode')) {\n\t    addFeatures(modMeta.at('features', []));\n\t}\n\n\tmodMeta.set('allFeatures', new NANOS(...features.keys()));\n\n\t// No more changes!\n\tmodMeta.deepFreeze();\n\n\t/*\n\t * Allow modules to @c(fwait @loaded) and initiate loading of all\n\t * non-deferred modules. @loaded reflects completion of the loading\n\t * phase (success or failure).\n\t */\n\tconst loaded = getInstance('@promise'), loadPros = [];\n\tfeatures.set('@loaded', loaded);\n\tfor (const mod of modMeta.at('modules')?.entries() || []) if (!mod[1].at('deferLoad')) loadPros.push(loadModule(mod[0]));\n\tloaded.allSettled(loadPros);\n    }\n\n    function stub (type, ...names) {\n\tconst h = interfaces[type]?.handlers;\n\tif (h) names.forEach(name => h[name] = false);\n    }\n\n    /*\n     * Check whether an object type accepts a given message operation.\n     * Returns ['specific', type] if there's a specific handler;\n     * ['default', type] if there's a default handler but no\n     * specific handler; or undefined. The type returned is the first\n     * type from the chain that responds, which may be different than\n     * the requested type.\n     */\n    function typeAccepts (type, op) {\n\tif (op === undefined) {\n\t    const ix = interfaces[type];\n\t    return ((ix && !ix.private) ? [...Object.keys(ix.handlers)] : undefined);\n\t}\n\tconst handler = getHandler(type, op);\n\tif (handler) return [ handler.type, handler.op === '@default' ? 'default': 'specific' ];\n    }\n\n    // Return whether the flat-chain for type 1 includes type 2.\n    function typeChains (type1, type2) {\n\tif (interfaces[type1]?.private) return;\n\tif (type2 === undefined) return (interfaces[type1] ? Array.from(interfaces[type1].chain) : undefined);\n\treturn flatChain(type1).has(type2);\n    }\n\n    return {\n\tdebugConfig,\n\tfcheck,\n\tfready,\n\tfwait,\n\tgetInstance: coreGetInstance,\n\tgetInterface,\n\tgetModMeta,\n\tinitialize,\n\tlogInterfaces,\n\tloadModule,\n\tmodHasCap,\n\tmoduleScope,\n\tsetModMeta,\n\ttypeAccepts,\n\ttypeChains,\n    };\n})();\n//////////////////////////////////////////////////////////////////////\n// END Of Code/Interface/Messaging Protected Zone\n//////////////////////////////////////////////////////////////////////\n\nsetRO(globalThis, {\n    $f: false, $gss: new NANOS(), $n: null, $t: true, $u: undefined,\n    $modScope: moduleScope,\n});\n\n/*\nvim:syntax=javascript:sw=4\n*/\n"],
  "mappings": "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",
  "names": ["calcDigest", "getIntegritySHA512", "NANOS", "isIndex", "parseQJSON", "parseSLID", "SieveCache", "unifiedList", "gt", "MsjsFlow", "MsjsFlowError", "calcIntegrity", "src", "fetchModule", "decode", "integrity", "data", "r", "listFromPairs", "pa", "loggedType", "v", "jt", "namespaceAt", "namespace", "key", "opt", "runIfCode", "runWhileCode", "sendAnonMessage", "rr", "op", "mp", "senderFLC", "stack", "srFrame", "match", "sROProp", "setRO", "o", "a", "map", "enumerable", "k", "value", "throwFlow", "d", "type", "ifName", "js", "hasOwn", "debugConfig", "fcheck", "fready", "fwait", "getInstance", "getInterface", "getModMeta", "initialize", "loadModule", "logInterfaces", "modHasCap", "moduleScope", "setModMeta", "typeAccepts", "typeChains", "codeBaton", "mesgBaton", "nextAnon", "nextUCID", "initPhase", "dispNo", "getCode", "initSym", "interfaces", "firstInit", "dbgCfg", "hdr", "handlerCache", "dacHandMctx", "features", "modMeta", "modMap", "modLoaded", "modMidToName", "addFeatures", "featureList", "feature", "prom", "appendStackTrace", "frames", "stop", "down", "up", "curFrm", "disp", "dispOp", "fmtDispParams", "fmtDispSrc", "bindCode", "tpl", "newMsjsCode", "canMesgProps", "ctx", "checkBaton", "sr", "st", "smi", "rt", "hasElse", "elseExpr", "mb", "hp", "prop", "moduleName", "coreGetInstance", "ix", "set", "dispProto", "dispatchHandler", "mctx", "dhctx", "octx", "handler", "sm", "bfnThis", "msjsR$Dispatch", "trace", "thisDisp", "lst", "result", "e", "dispatchMessage", "dctx", "cmp", "getHandler", "msjsS$SendMessage", "stub", "flatChain", "fc", "nxt", "inc", "list", "en", "flc", "f", "proms", "mid", "type0", "next", "noopHandler", "cacheKey", "hit", "getHandler2", "dacHand", "defHand", "code", "pi", "name", "isFirst", "bfn", "msjsR$Interface", "setInterface", "getRDMP", "raw", "installer", "cb", "module", "meta", "expect", "err", "fetchURL", "remapModURL", "importURL", "mod", "cap", "m", "per", "tra", "b", "getPer", "getTra", "cd", "od", "msjsR$Code", "newMsjsFunction", "ps", "msjsR$Function", "processModules", "mods", "listify", "base", "sep", "_modPath", "modInfo", "url", "prefixMap", "best", "input", "output", "len", "version", "major", "dir", "op0", "mp0", "_dmp", "dispElse", "rdop", "rdmp", "redis", "jsFnCall", "chain", "item", "opHandlers", "cacheHints", "hint", "loaded", "loadPros", "names", "h", "type1", "type2"]
}
