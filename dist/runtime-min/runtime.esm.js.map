{
  "version": 3,
  "sources": ["../../src/runtime/runtime.esm.js"],
  "sourcesContent": ["/*\n * Mesgjs Runtime Interface And Messaging Support\n * Author: Brian Katzung <briank@kappacs.com>\n * Copyright 2025 by Kappa Computer Solutions, LLC and Brian Katzung\n *\n * Wrapping objects (generating message gateways)\n * Sending and receiving messages\n * Defining interfaces and dispatching handlers in response to messages\n */\nimport { calcDigest, getIntegritySHA512 } from './calc-digest.esm.js';\nimport { NANOS, isIndex, parseQJSON, parseSLID } from './vendor.esm.js';\nimport { SieveCache } from './sieve-cache.esm.js';\nimport { unifiedList } from './unified-list.esm.js';\nimport './shim.esm.js';\n\nconst gt = globalThis;\n\n// Flow exception, e.g. @d(return value) throws MsjsFlow('return', value)\nexport class MsjsFlow extends Error {\n\tget name () { return 'MsjsFlow'; }\n}\nexport class MsjsFlowError extends RangeError {\n\tget name () { return 'MsjsFlowError'; }\n};\n\nexport async function calcIntegrity (src) {\n\treturn calcDigest(await fetchModule(src, { decode: false }), 'SHA-512');\n}\n\nexport async function fetchModule (src, { decode, integrity } = {}) {\n\tlet data;\n\tif (typeof Deno !== 'undefined' && !src.startsWith('https://') && !src.startsWith('data:')) {\n\t\tdata = await Deno.readFile(src);\n\t\tif (!data) throw new Error(`fetchModule: File \"${src}\" not found`);\n\t} else {\n\t\tdata = await fetch(src).then((r) => {\n\t\t\tif (r.ok) {\n\t\t\t\treturn r.arrayBuffer();\n\t\t\t}\n\t\t\tthrow new Error(`fetchModule: File \"${src}\" not found`);\n\t\t});\n\t}\n\tif (integrity && await calcDigest(data, 'SHA-512') !== integrity) return new Error(`fetchModule: File \"${src}\" integrity verification failed`);\n\treturn ((decode === false) ? data : new TextDecoder().decode(data));\n}\n\n// listFromPairs is the runtime shortcut ls([]) (NANOS generator)\nexport const listFromPairs = (pa) => new NANOS().fromPairs(pa);\n\n// Types to show in place of values during dispatch/stack traces\nexport function loggedType (v) {\n\tif (v?.msjsType) return 'M.' + v.msjsType;\n\tconst jt = typeof v;\n\tswitch (jt) {\n\tcase 'boolean': return (v ? '@t' : '@f');\n\tcase 'undefined': return '@u';\n\tcase 'object':\n\t\tif (v === null) return '@n';\n\t\treturn 'J.' + (v?.constructor?.name || 'Object');\n\tdefault: return 'J.' + jt;\n\t}\n}\n\n// namespaceAt is the runtime shortcut na(...) (NANOS .at)\nexport function namespaceAt\t (namespace, key, opt) {\n\tif (namespace?.has && namespace.has(key)) return namespace.at(key);\n\tif (!opt) throw new ReferenceError(`Required key \"${key}\" not found`);\n}\n\n// Get the return value if @code, or the raw value otherwise\nexport const runIfCode = (v) => v?.msjsType === '@code' ? v('run') : v;\n// Run @code chains until reaching a non-@code value\nexport function runWhileCode (v) {\n\twhile (v?.msjsType === '@code') v = v('run');\n\treturn v;\n}\n\n// Send an anonymous message (promoting JS receiver objects as necessary)\nexport function sendAnonMessage (rr, op, mp) {\n\tif (!rr?.msjsType) rr = gt.$toMsjs(rr);\n\treturn rr(op, mp);\n}\n\n// Return a message sender's source file/line/column\nexport function senderFLC () {\n\tconst stack = (new Error().stack || '').split('\\n');\n\t// Discard stack frames through the object's msjsR$ receiver (public i/f fn)\n\twhile (stack.length) if (/msjsR\\$/.test(stack.shift())) break;\n\t// Also discard sender's msjsS$ frames for attributed messages\n\twhile (/msjsS\\$/.test(stack[0])) stack.shift();\n\tconst srFrame = stack[0] || '';\n\tconst match = srFrame.match(/[@(](.*):(\\d+):(\\d+)/) ||\n\t\tsrFrame.match(/(?:^|\\s+)at\\s+(.*):(\\d+):(\\d+)$/);\n\tif (match) return { file: match[1], line: parseInt(match[2]), column: parseInt(match[3]) };\n}\n\n// Set a read-only object property or properties\n// setRO(obj, key, value, enumerable = true)\n// setRO(obj, { map }, enumerable = true)\nconst sROProp = { writable: false, configurable: false };\nexport const setRO = (o, ...a) => {\n\tif (typeof a[0] === 'object') {\n\t\tconst [map, enumerable = true] = a;\n\t\tsROProp.enumerable = enumerable;\n\t\tfor (const k of Object.keys(map)) {\n\t\t\tsROProp.value = map[k];\n\t\t\tObject.defineProperty(o, k, sROProp);\n\t\t}\n\t} else {\n\t\tconst [key, value, enumerable = true] = a;\n\t\t[ sROProp.value, sROProp.enumerable ] = [ value, enumerable ];\n\t\tObject.defineProperty(o, key, sROProp);\n\t}\n\treturn o;\n};\n\nexport function throwFlow (d, type, ifName) {\n\tconst { js, mp } = d;\n\tif (!js.active) throw new MsjsFlowError(`(${type}) to inactive ${ifName}`);\n\tjs.capture = true;\n\tif (mp.has('result')) {\n\t\tjs.hasFlowRes = true;\n\t\tjs.flowRes = mp.at('result');\n\t}\n\tthrow new MsjsFlow(type);\n}\n\nconst hasOwn = Object.hasOwn;\n\n//////////////////////////////////////////////////////////////////////\n// START Of Code/Interface/Messaging Protected Zone\n//////////////////////////////////////////////////////////////////////\nexport const {\n\tdebugConfig,\n\tfcheck,\n\tfready,\n\tfwait,\n\tgetInstance,\n\tgetInterface,\n\tgetModMeta,\n\tinitialize,\n\tloadModule,\n\tlogInterfaces,\n\tmodHasCap,\n\tmoduleScope,\n\tsetModMeta,\n\ttypeAccepts,\n\ttypeChains,\n} = (() => {\n\tlet codeBaton, mesgBaton, nextAnon = 0, nextUCID = 0, initPhase = 2, dispNo = 0;\n\tconst getCode = Symbol('getCode'), initSym = Symbol('@init');\n\tconst interfaces = Object.create(null), firstInit = [];\n\tconst dbgCfg = Object.setPrototypeOf({\n\t\tdispatch: false, dispatchSource: false, dispatchTypes: false,\n\t\tstack: 0, stackSource: false, stackTypes: false,\n\t\thandlerCache: false,\n\t}, null), stack = [], hdr = '-- Mesgjs Dispatch Stack --';\n\tconst handlerCache = new SieveCache(1024);\n\tconst dacHandMctx = { st: '@core', rt: '@core', sm: sendAnonMessage };\n\tconst featurePromises = new Map(), allFeatures = new NANOS();\n\tconst modMeta = new NANOS(), modMap = new Map(), modLoaded = new Set();\n\tconst modMidToName = new Map();\n\n\t// Add features from a string / array / list\n\tfunction addFeatures (featureList, modPath, modInfo) {\n\t\tif (typeof featureList === 'string') {\n\t\t\tfeatureList = featureList.split(/\\s+/).filter(Boolean);\n\t\t}\n\t\tif (typeof featureList?.values !== 'function') return;\n\t\tfor (const feature of featureList.values()) {\n\t\t\tif (!featurePromises.has(feature)) {\n\t\t\t\tconst prom = getInstance('@promise');\n\t\t\t\tprom.catch(() => console.warn(`loadModule: Feature \"${feature}\" rejected`));\n\t\t\t\tfeaturePromises.set(feature, prom);\n\t\t\t\tallFeatures.push(feature);\n\t\t\t\tif (modPath && modInfo) allFeatures.set(feature, new NANOS({ [modInfo.at('deferLoad') ? 'defer' : 'preload']: modPath }));\n\t\t\t}\n\t\t}\n\t}\n\n\t// Add some or all of our Mesgjs stack trace to the JS one\n\tfunction appendStackTrace (e) {\n\t\tif (!stack.length || !e.stack?.includes || e.stack.includes(hdr)) return;\n\t\tconst frames = [], stop = dbgCfg.stack;\n\t\tlet down = stack.length;\n\t\tfor (let up = 0; --down >= 0; ) {\n\t\t\tconst curFrm = stack[down], disp = curFrm.disp;\n\t\t\tconst dispOp = (typeof disp.op === 'symbol') ? 'J.Symbol' : disp.op;\n\t\t\tframes.push(`${disp.st} => ${disp.rt}(${dispOp}${fmtDispParams(dbgCfg.stackTypes, disp.mp)})${fmtDispSrc(dbgCfg.stackSource,curFrm)}`);\n\t\t\tif (++up === stop) break;\n\t\t}\n\t\tif (down >= 0) frames.push('[...]');\t// Config stopped us early\n\t\te.stack += '\\n' + hdr + '\\n' + frames.join('\\n');\n\t}\n\n\t// Bind a code template to a dispatch object and save it\n\tfunction bindCode (tpl, disp) {\n\t\tif (tpl.ucid === undefined) setRO(tpl, 'ucid', nextUCID++);\n\t\treturn ((disp._bc ||= [])[tpl.ucid] ||= newMsjsCode(tpl.cd, disp));\n\t}\n\n\t/*\n\t * Return canonical message properties\n\t * sr, st, rr, rt, op, mp, hasElse, elseExpr\n\t *\n\t * - Checks (and clears) the message baton\n\t * - Processes (NANOS or plain JS object) list-op messages\n\t */\n\tfunction canMesgProps(ctx, checkBaton = true) {\n\t\tlet sr, st, smi, { rr, rt, op, mp } = ctx, hasElse = false, elseExpr;\n\t\tif (checkBaton) {\n\t\t\tconst mb = mesgBaton;\n\t\t\tmesgBaton = undefined;\n\t\t\tif (op === undefined && mb?.rr === rr) ({ sr, st, smi, op, mp } = mb);\n\t\t}\n\t\tif (op instanceof NANOS) op = op.storage;\n\t\tif (typeof op === 'object') {\t// List-op message\n\t\t\tconst hp = (prop) => hasOwn(op, prop);\n\t\t\tif (hp('else')) [hasElse, elseExpr] = [true, op.else];\n\t\t\tif (hp('mid')) {\n\t\t\t\tconst moduleName = modMidToName.get(op.mid);\n\t\t\t\tif (moduleName) smi = moduleName;\n\t\t\t}\n\t\t\tif (hp('params')) mp = op.params;\n\t\t\tif (hp('op')) op = op.op;\n\t\t\telse if (hp('0')) op = op[0];\n\t\t\telse throw new SyntaxError('Missing operation in Mesgjs list-op message');\n\t\t}\n\t\tif (!(mp instanceof NANOS)) mp = new NANOS(mp ?? []);\n\t\treturn { sr, st, smi, rr, rt, op, mp, hasElse, elseExpr };\n\t}\n\n\t// Core version of getInstance (works with public interfaces)\n\tfunction coreGetInstance (type, mp) {\n\t\tconst ix = interfaces[type];\n\t\tif (ix && !ix.private) return getInstance(type, mp);\n\t}\n\n\t// Optionally set, and then return, debugging configuration\n\tfunction debugConfig (set) {\n\t\tset = unifiedList(set);\n\t\tfor (const k of Object.keys(dbgCfg)) {\n\t\t\tconst type = typeof dbgCfg[k];\n\t\t\tswitch (type) {\n\t\t\tcase 'boolean':\n\t\t\t\tif (set?.has?.(k)) dbgCfg[k] = !!set.at(k);\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\t{\n\t\t\t\tconst v = set?.at?.(k);\n\t\t\t\t// deno-lint-ignore valid-typeof\n\t\t\t\tif (typeof v === type) dbgCfg[k] = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new NANOS(dbgCfg);\n\t}\n\n\t// Shared JS getters & methods for @dispatch interface functions\n\tconst dispProto = Object.setPrototypeOf({\n\t\t// Return code bound to this dispatch\n\t\tb (tpl) { return bindCode(tpl, this); },\n\t\tget js () { return this.octx.js; },\n\t\t// JIT persistent storage NANOS\n\t\tget p () { return this.octx.ps ??= new NANOS(); },\n\t\tget msjsType () { return '@dispatch'; },\n\t\t// JIT transient (scratch) storage NANOS\n\t\tget t () { return this._ts ??= new NANOS(); },\n\t}, Function.prototype);\n\n\t// Dispatch a handler, passing it a fresh @dispatch object\n\tfunction dispatchHandler (mctx, dhctx, mp) {\n\t\tconst { sr, st, smi, rr, rt } = mctx; // message context\n\t\tconst { op, octx, handler, sm } = dhctx; // dH context\n\n\t\t/*\n\t\t * As part of the messaging pathway, dispatch objects have custom\n\t\t * receiver functions.\n\t\t */\n\t\tconst bfnThis = {}, disp = bfnThis.bfn = Object.setPrototypeOf(msjsR$Dispatch.bind(bfnThis, mctx, dhctx, mp), dispProto);\n\t\tdisp.dop = op;\n\t\tdisp.ht = handler.type;\n\t\tdisp.mop = mctx.op;\n\t\tdisp.mp = mp;\n\t\tdisp.octx = octx;\n\t\tdisp.rr = rr;\n\t\tdisp.rt = rt;\n\t\tdisp.sm = sm;\n\t\tdisp.sr = sr;\n\t\tdisp.st = st;\n\t\tdisp.smi = smi;\n\n\t\tconst trace = dbgCfg.stack, thisDisp = dbgCfg.dispatch && (dispNo++).toString(16);\n\t\ttry {\n\t\t\tif (dbgCfg.dispatch) {\n\t\t\t\tconst dispOp = (typeof op === 'symbol') ? 'J.Symbol' : op;\n\t\t\t\tconst dispSt = st || '@u';\n\t\t\t\tconsole.log(`[Mesgjs dispatch ${thisDisp}] ${dispSt} => ${rt}${handler.type === rt ? '' : ('/' + handler.type)}(${dispOp}${fmtDispParams(dbgCfg.dispatchTypes, disp.mp)})${fmtDispSrc(dbgCfg.dispatchSource)}`);\n\t\t\t}\n\t\t\tif (trace) stack.push({ disp, ...(dbgCfg.stackSource && senderFLC() || {}) });\n\t\t\tconst result = handler.code(disp);\n\t\t\tif (thisDisp !== false) console.log(`[Mesgjs return ${thisDisp}]${fmtDispParams(dbgCfg.dispatchTypes, [ result ])}`);\n\t\t\treturn result;\n\t\t}\n\t\tcatch (e) {\n\t\t\tif (disp._capture && e instanceof MsjsFlow) {\n\t\t\t\tdisp._capture = false;\n\t\t\t\tif (thisDisp !== false) console.log(`[Mesgjs return ${thisDisp}]${fmtDispParams(dbgCfg.dispatchTypes, [ e.info ])}`);\n\t\t\t\treturn e.info;\n\t\t\t}\n\t\t\tif (thisDisp !== false) console.warn(`[Mesgjs exception ${thisDisp}]`, e);\n\t\t\tif (trace && !(e instanceof MsjsFlow)) appendStackTrace(e);\n\t\t\tthrow e;\n\t\t}\n\t\tfinally {\n\t\t\tif (trace) stack.pop();\n\t\t}\n\t\t// Not reached\n\t}\n\n\t// Handle an incoming message's first dispatch\n\tfunction dispatchMessage (mctx, dctx) {\n\t\tconst cmp = canMesgProps(mctx);\n\t\tconst { st, rr, rt, mp, hasElse, elseExpr } = cmp;\n\t\tlet op = cmp.op;\n\t\tconst isInit = op === initSym || dctx.isInit;\n\t\tif (isInit && op === initSym) cmp.op = op = '@init';\n\t\tconst { octx, handler = getHandler(rt, op, { isInit }) } = dctx;\n\n\t\tif (!handler) {\n\t\t\tif (dbgCfg.dispatch) console.log(`[Mesgjs dispatch] ${st} => ${rt}(${op}) [NO HANDLER]${fmtDispSrc(dbgCfg.dispatchSource)}`);\n\t\t\tif (hasElse) return runIfCode(elseExpr);\n\t\t\tthrow new TypeError(`No Mesgjs handler found for \"${rt}(${op})\"`);\n\t\t}\n\n\t\t// Send-message function (shared across all dispatches)\n\t\tconst sm = msjsS$SendMessage.bind({ sr: rr, st: rt });\n\n\t\t// Dispatch the initial handler and return its result\n\t\treturn dispatchHandler(cmp, { octx, op, handler, sm, isInit }, mp);\n\t}\n\tfirstInit.push(() => {\n\t\tgetInterface('@dispatch').set({ pristine: true, private: true, lock: true });\n\t\tstub('@dispatch', 'ht', 'js', 'op', 'redis', 'return', 'rr', 'rt', 'sr', 'st', 'smi');\n\t});\n\n\t// Return flattened chain set by interface type\n\tfunction flatChain (type) {\n\t\tconst ix = interfaces[type];\n\t\tif (!ix) return new Set();\n\t\tlet fc = ix.flatChain;\n\t\tif (!fc) {\n\t\t\tfc = new Set([type]);\n\t\t\tfor (const nxt of ix.chain) if (!fc.has(nxt)) fc = fc.union(flatChain(nxt));\n\t\t\tix.flatChain = fc;\n\t\t}\n\t\treturn fc;\n\t}\n\n\t// Format dispatch message parameter types\n\tfunction fmtDispParams (inc, list) {\n\t\tif (!inc) return '';\n\t\treturn [...unifiedList(list).entries()].map((en) => (isIndex(en[0]) ? ` ${loggedType(en[1])}` : ` ${en[0]}=${loggedType(en[1])}`)).join('');\n\t}\n\n\t// Format a dispatched message source file / line / column\n\tfunction fmtDispSrc (inc, flc) {\n\t\tif (inc) {\n\t\t\tif (!flc) flc = senderFLC();\n\t\t\tif (flc?.line !== undefined) return ` at ${flc.file}:${flc.line}:${flc.column}`;\n\t\t}\n\t\treturn '';\n\t}\n\n\t// Non-blocking feature check\n\tfunction fcheck (feature) {\n\t\tswitch (featurePromises.get(feature)?.state) {\n\t\tcase 'pending': return false;\t// @f: not ready\n\t\tcase 'fulfilled': return true;\t// @t: ready\n\t\t}\n\t\t// no such feature, or mod load rejected: @u\n\t}\n\n\t// Wait for a list of features to be ready\n\t// (Initiates the loading of deferred modules as needed)\n\tfunction fwait (...list) {\n\t\tconst extended = new Set(list);\n\t\tconst requireModule = (module) => {\n\t\t\tif (modLoaded.has('mod-' + module)) return;\n\t\t\tloadModule(module);\n\t\t\tfor (const featreq of modMeta.at(['modules', module, 'featreq'], []).values()) extended.add(featreq);\n\t\t};\n\t\tfor (const feature of extended) {\n\t\t\tconst defMod = allFeatures.at([feature, 'defer']);\n\t\t\tif (defMod) requireModule(defMod);\n\t\t}\n\t\tconst promise = getInstance('@promise'), promises = [];\n\t\tpromise.catch(() => {});\n\t\tfor (const feature of extended) if (featurePromises.has(feature)) promises.push(featurePromises.get(feature));\n\t\treturn promise.all(promises);\n\t}\n\n\t// Mark a feature ready (if module is authorized)\n\tfunction fready (mid, feature) {\n\t\tconst meta = modMap.get(mid);\n\t\tif (meta?.at('featpro')?.includes(feature) || modMeta.at('testMode')) {\n\t\t\tfeaturePromises.get(feature)?.resolve();\n\t\t}\n\t}\n\n\t/*\n\t * Try to locate a specific or default handler for a type and operation.\n\t * Returns {code, type, op}.\n\t */\n\tfunction getHandler (type0, op, { isInit, next } = {}) {\n\t\tconst noopHandler = { code: () => {}, type: type0, op };\n\t\t// Ignore (no-op) @init outside of getInstance\n\t\tif (!isInit && op === '@init') return noopHandler;\n\t\tconst cacheKey = typeof type0 === 'string' && typeof op === 'string' && `${type0}(${op})${next ? '+' : ''}`, hit = cacheKey && handlerCache.get(cacheKey);\n\t\tif (hit) return hit;\n\n\t\tconst searchChain = () => {\n\t\t\tlet dacHand, defHand;\n\t\t\tfor (const type of flatChain(type0)) {\n\t\t\t\tif (next && type === type0) continue;\n\t\t\t\tconst ix = interfaces[type], code = ix?.handlers[op];\n\t\t\t\tif (code) return { code, type, op };\n\t\t\t\tif (ix && !defHand) {\n\t\t\t\t\tif (!dacHand) {\n\t\t\t\t\t\tconst op = '@defacc', code = ix.handlers[op];\n\t\t\t\t\t\tif (code) dacHand = { code, type, op };\n\t\t\t\t\t}\n\t\t\t\t\tconst op = '@default', code = ix.handlers[op];\n\t\t\t\t\tif (code) defHand = { code, type, op };\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Use no-op as the special default for @init\n\t\t\tif (op === '@init') return noopHandler;\n\t\t\t// @defacc can moderate what @default accepts\n\t\t\tif (defHand && dacHand && !dispatchHandler(dacHandMctx, { op: '@defacc', octx: {}, handler: dacHand }, { op, type: defHand.type })) return;\n\t\t\treturn defHand;\n\t\t};\n\t\tconst handler = searchChain();\n\t\tconst cacheable =\n\t\t\t((!cacheKey || !handler || !interfaces[handler.type].locked) ? false :\n\t\t\t((handler.code.cache !== undefined) ? handler.code.cache :\n\t\t\t(handler.op !== op || handler.type !== type0)));\n\t\tif (cacheable) {\n\t\t\tif (dbgCfg.handlerCache) console.log(`[Mesgjs handler cache] ${cacheKey} => ${handler.type}(${handler.op})`);\n\t\t\thandlerCache.set(cacheKey, handler, handler.code.cache === 'pin' && handler.type === type0);\n\t\t}\n\t\treturn handler;\n\t}\n\n\t/*\n\t * Return a new object instance of the specified type.\n\t * The JS initializer is called if one is configured in the interface.\n\t */\n\tfunction getInstance (type, mp, { sr, st, smi } = {}) {\n\t\tconst ix = interfaces[type];\n\t\tif (!ix) throw new TypeError(`Cannot get instance for unknown Mesgjs interface \"${type}\"`);\n\t\tif (ix.instance) return ix.instance;\n\t\tif (ix.abstract) throw new TypeError(`Cannot get instance for abstract Mesgjs interface \"${type}\"`);\n\t\tconst octx = Object.create(null), rr = function msjsR$Object (op, mp) { return dispatchMessage({ rr, rt: type, op, mp }, { octx }); };\n\t\tsetRO(rr, 'msjsType', type);\n\t\tif (ix.singleton) ix.instance = rr;\n\t\t// Don't allow behavior or interface properties to change once an instance exists\n\t\tix.locked = true;\n\t\tif (!(mp instanceof NANOS)) mp = new NANOS(mp ?? []);\n\t\ttry {\n\t\t\tmesgBaton = { sr, st, smi, rr, op: initSym, mp };\n\t\t\trr();\n\t\t} finally {\n\t\t\tmesgBaton = undefined;\n\t\t}\n\t\treturn rr;\n\t}\n\n\t/*\n\t * Return a Msjs interface management object.\n\t * As part of the foundation for the object messaging system, it uses\n\t * a custom message receiver function.\n\t */\n\tfunction getInterface (name) {\n\t\tif (name === ':?') name = ':?' + nextAnon++;\n\t\telse if (typeof name !== 'string' || !name || (name.startsWith(':?') && !interfaces[name])) return;\n\t\t// No new `@` interfaces after init phase 1\n\t\tif (name[0] === '@' && initPhase !== 1 && !interfaces[name]) return;\n\t\tconst ix = interfaces[name], isFirst = !ix;\n\t\tif (isFirst) interfaces[name] = {\n\t\t\thandlers: Object.create(null), chain: new Set([]),\n\t\t\tabstract: false, final: false, locked: false,\n\t\t\tonce: false, pristine: true, singleton: false\n\t\t};\n\t\tif (ix?.once) return;\n\t\tconst bfnThis = { name, isFirst }, bfn = bfnThis.bfn = msjsR$Interface.bind(bfnThis);\n\t\treturn setRO(bfn, {\n\t\t\tifName: name,\n\t\t\tset: (mp) => {\n\t\t\t\tsetInterface(name, mp, isFirst);\n\t\t\t\treturn bfn;\n\t\t\t},\n\t\t\tinstance: (mp) => getInstance(name, mp),\n\t\t\tmsjsType: '@interface',\n\t\t});\n\t}\n\tfirstInit.push(() => {\n\t\tgetInterface('@interface').set({ pristine: true, private: true, lock: true });\n\t\tstub('@interface', 'instance', 'name', 'set');\n\t});\n\n\t// Return the current modMeta (if configured)\n\tfunction getModMeta () {\n\t\t// Never give access to unfrozen modMeta!\n\t\treturn Object.isFrozen(modMeta) ? modMeta : undefined;\n\t}\n\n   // Determine next-level message params for redispatch\n\tfunction getRDMP (mp) {\n\t\tconst raw = mp.at('params', mp);\n\t\treturn ((raw instanceof NANOS) ? raw : new NANOS(raw ?? []));\n\t}\n\n\t// Initialize the runtime environment (e.g. load core, core extensions)\n\tfunction initialize (installer) {\n\t\tif (initPhase === 2) {\t\t\t// Only initialize once\n\t\t\tinitPhase = 1;\n\t\t\tfirstInit.forEach((cb) => cb());\n\t\t\tinstaller();\n\t\t\tinitPhase = 0;\n\t\t\tdacHandMctx.sr = dacHandMctx.rr = gt.$c;\n\t\t}\n\t}\n\n\tasync function loadModule (module) {\n\t\t// Prevent reload by source\n\t\tif (modLoaded.has('mod-' + module)) return;\n\t\tmodLoaded.add('mod-' + module);\n\n\t\tconst meta = modMeta.at(['modules', module]);\n\t\tif (meta.at('url', '').endsWith('.msjs')) return;\n\t\tconst integrity = meta.at('integrity', '');\n\t\tconst expect = (integrity === 'DISABLED') ? '' : getIntegritySHA512(integrity);\n\t\tif (expect) {\n\t\t\t// Prevent reload by signature\n\t\t\tif (modLoaded.has(expect)) return;\n\t\t\tmodLoaded.add(expect);\n\t\t} else {\n\t\t\tif (globalThis.msjsHasModMeta && integrity !== 'DISABLED') {\n\t\t\t\tconst err = new Error(`loadModule: Refusing unverified module \"${module}\"`);\n\t\t\t\tconsole.error(err.message);\n\t\t\t\treturn err;\n\t\t\t}\n\t\t\tconsole.warn(`loadModule WARNING: Module \"${module}\" is unverified`);\n\t\t}\n\n\t\tconst fetchURL = remapModURL(module, meta);\n\t\tlet code, importURL;\n\t\tconst mid = Symbol();\n\t\tmodMidToName.set(mid, module);\n\t\ttry {\n\t\t\tcode = await fetchModule(fetchURL, { integrity: expect });\n\t\t\tif (meta) {\n\t\t\t\tif (expect) modMap.set(expect, meta);\n\t\t\t\tmodMap.set(mid, meta);\n\t\t\t}\n\n\t\t\tconst importURL = (typeof Blob === 'function' && typeof URL?.createObjectURL === 'function') ?\n\t\t\t\tURL.createObjectURL(new Blob([ new TextEncoder().encode(code) ], { type: 'application/javascript' })) :\n\t\t\t\t`data:application/javascript;base64,${btoa(code)}`;\n\t\t\tconst mod = await import(importURL);\n\t\t\tif (globalThis.msjsHasModMeta && typeof mod.loadMsjs === 'function') mod.loadMsjs(mid);\n\t\t} catch (err) {\n\t\t\tconsole.error(`loadModule \"${module}\" failed: ${err.message}`);\n\t\t\t// Reject this module's features, if any\n\t\t\tfor (const feature of meta?.at('featpro')?.values() || []) {\n\t\t\t\tfeaturePromises.get(feature)?.reject(code);\n\t\t\t}\n\t\t\treturn err;\n\t\t} finally {\n\t\t\tif (importURL?.startsWith('blob:')) URL.revokeObjectURL(importURL);\n\t\t}\n\t}\n\n\tfunction logInterfaces () { console.log(interfaces); }\n\n\t// Determine whether a module has a capability\n\tfunction modHasCap (module, cap) {\n\t\tconst caps = modMeta?.at(['modules', module, 'modcaps']) || [];\n\t\treturn caps.includes(cap);\n\t}\n\n\t// Return a module dispatch object\n\tfunction moduleScope () {\n\t\tconst m = function msjsR$Module () {}, d = function msjsR$Dispatch (op) {\n\t\t\t({ op } = canMesgProps({ rr: d, op }));\n\t\t\tswitch (op) {\n\t\t\tcase 'op': return 'load';\n\t\t\tcase 'rr': case 'sr': return m;\n\t\t\tcase 'rt': case 'st': return '@module';\n\t\t\t// Quietly ignore other messages\n\t\t\t}\n\t\t};\n\t\tlet per, tra;\t// JIT persistent, transient storage\n\t\tconst b = (tpl) => bindCode(tpl, d), sm = msjsS$SendMessage.bind({ sr: m, st: '@module' }), getPer = () => (per ??= new NANOS()), getTra = () => (tra ??= new NANOS());\n\t\tsetRO(m, 'msjsType', '@module');\n\t\tObject.defineProperties(m, {\n\t\t\tp: { get: getPer, enumerable: true },\n\t\t\tt: { get: getTra, enumerable: true },\n\t\t});\n\t\tsetRO(d, {\n\t\t\tsr: m, st: '@module', rr: m, rt: '@module', msjsType: '@dispatch',\n\t\t\toctx: gt.$u, op: 'load', mp: gt.$u, b, sm,\n\t\t});\n\t\tObject.defineProperties(d, {\n\t\t\tp: { get: getPer, enumerable: true },\n\t\t\tt: { get: getTra, enumerable: true },\n\t\t});\n\t\treturn { d, m,\n\t\t\tls: listFromPairs,\n\t\t\tna: namespaceAt,\n\t\t};\n\t}\n\tfirstInit.push(() => {\n\t\tgetInterface('@module').set({ pristine: true, private: true, lock: true });\n\t});\n\n\t// Return a new Msjs @code object given code and a dispatch\n\tfunction newMsjsCode (cd, od) {\n\t\t// Encapsulate the code with a custom receiver function (public i/f)\n\t\tconst bfnThis = { cd, od }, bfn = bfnThis.bfn = msjsR$Code.bind(bfnThis);\n\t\treturn setRO(bfn, 'msjsType', '@code');\n\t}\n\n\t// Return a new Msjs @function object given code and state\n\tfunction newMsjsFunction (cd, ps) {\n\t\tconst type = '@function', octx = {};\n\t\tconst bfnThis = { octx, op: 'call', handler: { code: cd, type, op: 'call' } };\n\t\tif (ps !== undefined) setRO(octx, 'ps', ps);\n\t\tconst bfn = bfnThis.bfn = msjsR$Function.bind(bfnThis);\n\t\tbfnThis.sm = msjsS$SendMessage.bind({ sr: bfn, st: type });\n\t\treturn setRO(bfn, 'msjsType', type);\n\t}\n\tfirstInit.push(() => {\n\t\tgetInterface('@code').set({ pristine: true, private: true, lock: true,\n\t\t\thandlers: {\n\t\t\t\trun: false, fn: false,\n\t\t\t},\n\t\t});\n\t\tgetInterface('@function').set({ pristine: true, private: true, lock: true,\n\t\t\thandlers: {\n\t\t\t\tcall: false, fn: false,\n\t\t\t},\n\t\t});\n\t\tgetInterface('@handler').set({ pristine: true, private: true, lock: true });\n\t});\n\n\t// Process module entries.\n\tfunction processModules (mods) {\n\t\tconst listify = (base, key, sep = /[\\s,]+/) => {\n\t\t\tconst value = base.at(key);\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tbase.set(key, new NANOS(value.split(sep).filter(Boolean)));\n\t\t\t}\n\t\t};\n\t\tfor (const [modPath, modInfo] of mods?.namedEntries() || []) {\n\t\t\tconst integrity = modInfo.at('integrity');\n\t\t\tlistify(modInfo, 'featpro');\n\t\t\tlistify(modInfo, 'featreq');\n\t\t\tlistify(modInfo, 'modcaps');\n\t\t\tif (integrity !== 'DISABLED' && !getIntegritySHA512(integrity)) continue;\n\t\t\tconst features = modInfo?.at('featpro', []);\n\t\t\taddFeatures(features, modPath, modInfo);\n\t\t}\n\t}\n\n\t// Use modMeta to remap the module source location\n\tfunction remapModURL (src, meta) {\n\t\t// Use an exact URL if one was provided\n\t\tconst url = meta?.at('url');\n\t\tif (url) return url;\n\n\t\t// Revise based on prefix mapping\n\t\tconst prefixMap = modMeta.at('prefixMap');\n\t\tlet best = [ '', 0 ];\n\t\tfor (const [ input, output ] of prefixMap.entries()) {\n\t\t\tconst len = input.length;\n\t\t\tif (len > best[1] && src.startsWith(input)) best = [ output, len ];\n\t\t}\n\t\tsrc = best[0] + src.substring(best[1]);\n\n\t\t// /base + version => /base/major/base@version\n\t\tconst version = meta?.at('version'), [ , major ] = version && version.match(/(\\d+)/) || [];\n\t\tif (version && major !== undefined) {\n\t\t\tconst [ , dir, base ] = src.match(/(.*\\/)?(.*)(?:(?:\\.esm)?\\.js)?$/);\n\t\t\tsrc = `${dir}${base}/${major}/${base}@${version}`;\n\t\t}\n\n\t\tif (!src.endsWith('.js')) src += '.esm.js';\n\t\treturn src;\n\t}\n\n\t// Prototype @code receiver\n\tfunction msjsR$Code (op0, mp0) {\n\t\tconst cmp = canMesgProps({ rr: this.bfn, op: op0, mp: mp0 }), { op, mp, hasElse, elseExpr } = cmp;\n\t\t// Fast-track (run) message\n\t\tif (op === 'run') return this.cd(this.od);\n\t\tswitch (op) {\t// Standard-mode ops\n\t\tcase initSym: case '@init': return;\n\t\tcase getCode:\n\t\t\tcodeBaton = { code: this.cd }; // JS function for interface\n\t\t\treturn;\n\t\tcase 'fn':\t\t\t\t\t\t// Return new function code block\n\t\t\treturn newMsjsFunction(this.cd, mp);\n\t\t}\n\t\tif (hasElse) return runIfCode(elseExpr);\n\t\tthrow new TypeError(`No Mesgjs handler found for \"@code(${op})\"`);\n\t}\n\n\t/*\n\t * Prototype @dispatch receiver\n\t * Accepts original message context, dispatch context, and\n\t * dispatched message params.\n\t */\n\tfunction msjsR$Dispatch (mctx, dhctx, _dmp) {\n\t\t// Note: op/mp here is for the d(message), not the original (mctx)\n\t\tconst { op, mp, elseExpr } = canMesgProps({ rr: this.bfn });\n\t\tconst { octx, handler, isInit, sm } = dhctx;\n\t\tswitch (op) {\n\t\tcase 'dop': return dhctx.op;\t// Current dispatch REQUESTED op\n\t\tcase 'ht': return handler.type;\n\t\tcase 'js': return octx.js;\t\t// JavaScript state\n\t\tcase 'log':\t\t\t\t// Log the entire dispatch to the console\n\t\t\tconsole.dir(this.bfn, { depth: null });\n\t\t\treturn;\n\t\tcase 'mop': return mctx.op;\t\t// Original message requested op\n\t\tcase 'redis':\t\t\t// Redispatch\n\t\t{\n\t\t\t// Accept either list-op or mp else parameter\n\t\t\tconst dispElse = mp.has('else') ? mp.at('else') : elseExpr;\n\t\t\t// Optionally choose a specific type from the chain\n\t\t\tconst rdType = mp.at('type');\n\t\t\tconst type = (rdType && rdType !== '@next') ? rdType : handler.type;\n\t\t\t// The type must be in *current* handler's chain\n\t\t\tif (!flatChain(handler.type).has(type)) return runIfCode(dispElse);\n\t\t\t// Optionally change op and/or mp\n\t\t\tconst rdop = mp.has('op') ? mp.at('op') : handler.op, rdmp = getRDMP(mp);\n\t\t\tconst next = (type === handler.type && rdop === handler.op) || (rdType === '@next');\n\t\t\tconst redis = getHandler(type, rdop, { isInit, next });\n\t\t\t// Don't allow switch to default if not changing op\n\t\t\tif (!redis || (!mp.has('op') && redis.op !== rdop)) return runIfCode(dispElse);\n\t\t\t// Looks good; fire the redispatch\n\t\t\treturn dispatchHandler(mctx, { octx, op: rdop, isInit, handler: redis, sm }, rdmp);\n\t\t}\n\t\tcase 'return':\n\t\t\tthis.bfn._capture = true;\n\t\t\tthrow new MsjsFlow('return', mp.at(0));\n\t\t\t// Not reached\n\t\tcase 'rr': return mctx.rr;\t\t// Receiver\n\t\tcase 'rt': return mctx.rt;\t\t// Receiver type\n\t\tcase 'sr': return mctx.sr;\t\t// Sender\n\t\tcase 'st': return mctx.st;\t\t// Sender type\n\t\tcase 'smi': return mctx.smi;\t// Sending-module identifier\n\t\tcase undefined:\n\t\t\tthrow new TypeError(`\"${handler.type}(${dhctx.op})\": @dispatch messages must be attributed`);\n\t\t}\n\t\treturn runIfCode(elseExpr);\n\t}\n\n\t// Prototype @function receiver\n\tfunction jsFnCall (...mp) { return this.bfn('call', new NANOS([...mp])); }\n\tfunction msjsR$Function (op0, mp0) {\n\t\tconst cmp = canMesgProps({ rr: this.bfn, op: op0, mp: mp0 });\n\t\tconst { op, mp, hasElse, elseExpr } = cmp;\n\t\t// Fast-track (call) message\n\t\tif (op === 'call') return dispatchHandler(cmp, this, mp);\n\t\tswitch (op) {\t\t\t// Function-mode ops\n\t\tcase 'fn':\t\t\t\t\t\t// Return a new function code block\n\t\t\treturn newMsjsFunction(this.handler.code, mp);\n\t\tcase 'jsfn':\t\t\t// Return a JS wrapper-function\n\t\t\treturn (this.jsFn ||= jsFnCall.bind(this));\n\t\t}\n\t\tif (hasElse) return runIfCode(elseExpr);\n\t\tthrow new TypeError(`No Mesgjs handler found for \"@function(${op})\"`);\n\t}\n\n\t// Prototype @interface receiver\n\tfunction msjsR$Interface (op0, mp0) {\n\t\tconst name = this.name, { op, mp, sr, st, smi, hasElse, elseExpr } = canMesgProps({ rr: this.bfn, op: op0, mp: mp0 });\n\t\tswitch (op) {\n\t\tcase 'instance': return getInstance(name, mp, { sr, st, smi });\n\t\tcase 'name': return name;\n\t\tcase 'set':\n\t\t\tsetInterface(name, mp, this.isFirst);\n\t\t\treturn this.bfn;\n\t\t}\n\t\tif (hasElse) return runIfCode(elseExpr);\n\t\tthrow new TypeError(`No Mesgjs handler found for \"@interface(${op})\"`);\n\t};\n\n\t/*\n\t * Prototype private send-message function\n\t * Promote JS receiver objects to Mesgjs, if necessary, and deliver an\n\t * attributed message via the message baton.\n\t */\n\tfunction msjsS$SendMessage (rr, op, mp) {\n\t\tif (!rr?.msjsType) rr = gt.$toMsjs(rr);\n\t\tmesgBaton = { sr: this.sr, st: this.st, rr, op, mp };\n\t\tlet result;\n\t\ttry { result = rr(); }\n\t\tfinally { mesgBaton = undefined; }\n\t\treturn result;\n\t}\n\n\t/*\n\t * Interface-object implementation to set/change a Msjs object interface\n\t *\n\t * Parameters:\n\t * - abstract - The interface is incomplete and cannot be instantiated\n\t * - chain - Sets an ordered chain of super-class interfaces\n\t * - final - The interface is final and cannot be chained\n\t * - handlers - Message operation handlers to be added\n\t * - lock - Lock out future setInterface calls\n\t * - once - Prevents returning the interface again and throws an\n\t *\t\t error if returned before\n\t * - pristine - Throw an error if not the first configuration\n\t * - private - The interface is private (instances may only be generated\n\t *\t\t via the interface object, not through the core)\n\t */\n\tfunction setInterface (name, mp, isFirst) {\n\t\tif (name[0] === '@' && initPhase !== 1) throw new TypeError(`Cannot configure Mesgjs interface \"${name}\" after runtime initialization`);\n\t\tconst ix = interfaces[name];\n\t\tif (mp instanceof NANOS) mp = mp.storage;\n\t\tif ((mp.once && !isFirst) || (mp.pristine && !ix.pristine)) throw new TypeError(`Mesgjs interface \"${name}\" is not pristine`);\n\t\tix.pristine = false;\n\t\tif (ix.locked) throw new TypeError(`Cannot change locked Mesgjs interface \"${name}\"`);\n\n\t\t// Set the interface chain. Locking guarantees an acyclic graph.\n\t\tif (mp.chain) {\n\t\t\tif (ix.chain.size) throw new TypeError(`Cannot change chain for Mesgjs interface \"${name}\"`);\n\t\t\tconst chain = new Set(Object.values(mp.chain.storage || mp.chain || []));\n\t\t\tfor (const item of chain) {\n\t\t\t\tif (!interfaces[item]) throw new ReferenceError(`Mesgjs interface \"${name}\" references unknown interface \"${item}\"`);\n\t\t\t\tif (interfaces[item].final) throw new TypeError(`Mesgjs interface \"${name}\" tries to extend final interface \"${item}\"`);\n\t\t\t\tinterfaces[item].locked = true;\n\t\t\t}\n\t\t\tix.chain = chain;\n\t\t}\n\n\t\t/*\n\t\t * Add message handlers. These can be either foundational JavaScript\n\t\t * implementation functions or Mesgjs code blocks.\n\t\t */\n\t\tconst opHandlers = mp.handlers || {};\n\t\tfor (const [ op, handler ] of (opHandlers instanceof NANOS) ? opHandlers.entries() : Object.entries(opHandlers)) {\n\t\t\tif (typeof handler === 'function') {\n\t\t\t\tif (handler.msjsType === '@code') {\n\t\t\t\t\tcodeBaton = undefined;\n\t\t\t\t\thandler(getCode);\n\t\t\t\t\tif (codeBaton?.code) setRO(ix.handlers[op] = codeBaton.code, 'msjsType', '@handler');\n\t\t\t\t}\n\t\t\t\telse ix.handlers[op] = handler;\n\t\t\t} else if (handler === false) ix.handlers[op] = false;\n\t\t}\n\t\tcodeBaton = undefined;\n\n\t\tconst cacheHints = mp.cacheHints || {};\n\t\tfor (const [ op, hint ] of (cacheHints instanceof NANOS) ? cacheHints.entries() : Object.entries(cacheHints)) {\n\t\t\tswitch (hint) {\n\t\t\tcase true: case false: case 'pin':\n\t\t\t\tif (ix.handlers[op]) ix.handlers[op].cache = hint;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (mp.init) ix.init = mp.init; // JS instance-init function\n\t\tif (mp.abstract) ix.abstract = true;\n\t\tif (mp.final) ix.final = true;\n\t\tif (mp.lock) ix.locked = true;\n\t\tif (mp.once) ix.once = true;\n\t\tif (mp.private) ix.private = true;\n\t\tif (mp.singleton) ix.singleton = true;\n\t}\n\n\t// Set module metadata (once) from a plain object or NANOS\n\tfunction setModMeta (meta) {\n\t\tif (globalThis.msjsHasModMeta) return;\t// Already set\n\n\t\t// Deep copy from NANOS or plain object config\n\t\tif (meta instanceof NANOS) modMeta.push(parseSLID(meta.toSLID()));\n\t\telse if (typeof meta === 'object') modMeta.push(parseQJSON(JSON.stringify(meta)));\n\t\telse return;\n\n\t\tsetRO(globalThis, {\n\t\t\tmsjsHasModMeta: true,\t\t// Module metadata added\n\t\t\tmsjsNoSelfLoad: true,\t\t// Turn off module self-loading\n\t\t});\n\n\t\t// Track features provided by modules (or test mode)\n\t\tprocessModules(modMeta.at('modules'));\n\t\tif (modMeta.at('testMode')) {\n\t\t\taddFeatures(modMeta.at('features', []));\n\t\t}\n\n\t\tmodMeta.set('allFeatures', allFeatures);\n\n\t\t// No more changes!\n\t\tmodMeta.deepFreeze();\n\n\t\t/*\n\t\t * Allow modules to @c(fwait @loaded) and initiate loading of all\n\t\t * non-deferred modules. @loaded reflects completion of the loading\n\t\t * phase (success or failure).\n\t\t */\n\t\tconst loaded = getInstance('@promise'), loadPros = [];\n\t\tfeaturePromises.set('@loaded', loaded);\n\t\tfor (const [modPath, modInfo] of modMeta.at('modules')?.entries() || []) if (!modInfo.at('deferLoad')) loadPros.push(loadModule(modPath));\n\t\tloaded.allSettled(loadPros);\n\t}\n\n\tfunction stub (type, ...names) {\n\t\tconst h = interfaces[type]?.handlers;\n\t\tif (h) names.forEach((name) => h[name] = false);\n\t}\n\n\t/*\n\t * Check whether an object type accepts a given message operation.\n\t * Returns ['specific', type] if there's a specific handler;\n\t * ['default', type] if there's a default handler but no\n\t * specific handler; or undefined. The type returned is the first\n\t * type from the chain that responds, which may be different than\n\t * the requested type.\n\t */\n\tfunction typeAccepts (type, op) {\n\t\tif (op === undefined) {\n\t\t\tconst ix = interfaces[type];\n\t\t\treturn ((ix && !ix.private) ? [...Object.keys(ix.handlers)] : undefined);\n\t\t}\n\t\tconst handler = getHandler(type, op);\n\t\tif (handler) return [ handler.type, handler.op === '@default' ? 'default': 'specific' ];\n\t}\n\n\t// Return whether the flat-chain for type 1 includes type 2.\n\tfunction typeChains (type1, type2) {\n\t\tif (interfaces[type1]?.private) return;\n\t\tif (type2 === undefined) return (interfaces[type1] ? Array.from(interfaces[type1].chain) : undefined);\n\t\treturn flatChain(type1).has(type2);\n\t}\n\n\treturn {\n\t\tdebugConfig,\n\t\tfcheck,\n\t\tfready,\n\t\tfwait,\n\t\tgetInstance: coreGetInstance,\n\t\tgetInterface,\n\t\tgetModMeta,\n\t\tinitialize,\n\t\tlogInterfaces,\n\t\tloadModule,\n\t\tmodHasCap,\n\t\tmoduleScope,\n\t\tsetModMeta,\n\t\ttypeAccepts,\n\t\ttypeChains,\n\t};\n})();\n//////////////////////////////////////////////////////////////////////\n// END Of Code/Interface/Messaging Protected Zone\n//////////////////////////////////////////////////////////////////////\n\nsetRO(globalThis, {\n\t$f: false, $gss: new NANOS(), $n: null, $t: true, $u: undefined,\n\t$modScope: moduleScope,\n});\n\n/*\nvim:syntax=javascript:sw=4\n*/\n"],
  "mappings": "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",
  "names": ["calcDigest", "getIntegritySHA512", "NANOS", "isIndex", "parseQJSON", "parseSLID", "SieveCache", "unifiedList", "gt", "MsjsFlow", "MsjsFlowError", "calcIntegrity", "src", "fetchModule", "decode", "integrity", "data", "r", "listFromPairs", "pa", "loggedType", "v", "jt", "namespaceAt", "namespace", "key", "opt", "runIfCode", "runWhileCode", "sendAnonMessage", "rr", "op", "mp", "senderFLC", "stack", "srFrame", "match", "sROProp", "setRO", "o", "a", "map", "enumerable", "k", "value", "throwFlow", "d", "type", "ifName", "js", "hasOwn", "debugConfig", "fcheck", "fready", "fwait", "getInstance", "getInterface", "getModMeta", "initialize", "loadModule", "logInterfaces", "modHasCap", "moduleScope", "setModMeta", "typeAccepts", "typeChains", "codeBaton", "mesgBaton", "nextAnon", "nextUCID", "initPhase", "dispNo", "getCode", "initSym", "interfaces", "firstInit", "dbgCfg", "hdr", "handlerCache", "dacHandMctx", "featurePromises", "allFeatures", "modMeta", "modMap", "modLoaded", "modMidToName", "addFeatures", "featureList", "modPath", "modInfo", "feature", "prom", "appendStackTrace", "frames", "stop", "down", "up", "curFrm", "disp", "dispOp", "fmtDispParams", "fmtDispSrc", "bindCode", "tpl", "newMsjsCode", "canMesgProps", "ctx", "checkBaton", "sr", "st", "smi", "rt", "hasElse", "elseExpr", "mb", "hp", "prop", "moduleName", "coreGetInstance", "ix", "set", "dispProto", "dispatchHandler", "mctx", "dhctx", "octx", "handler", "sm", "bfnThis", "msjsR$Dispatch", "trace", "thisDisp", "result", "e", "dispatchMessage", "dctx", "cmp", "isInit", "getHandler", "msjsS$SendMessage", "stub", "flatChain", "fc", "nxt", "inc", "list", "en", "flc", "extended", "requireModule", "module", "featreq", "defMod", "promise", "promises", "mid", "type0", "next", "noopHandler", "cacheKey", "hit", "dacHand", "defHand", "code", "name", "isFirst", "bfn", "msjsR$Interface", "setInterface", "getRDMP", "raw", "installer", "cb", "meta", "expect", "err", "fetchURL", "remapModURL", "importURL", "mod", "cap", "m", "per", "tra", "b", "getPer", "getTra", "cd", "od", "msjsR$Code", "newMsjsFunction", "ps", "msjsR$Function", "processModules", "mods", "listify", "base", "sep", "features", "url", "prefixMap", "best", "input", "output", "len", "version", "major", "dir", "op0", "mp0", "_dmp", "dispElse", "rdType", "rdop", "rdmp", "redis", "jsFnCall", "chain", "item", "opHandlers", "cacheHints", "hint", "loaded", "loadPros", "names", "h", "type1", "type2"]
}
