{
  "version": 3,
  "sources": ["../../src/runtime/js-string.esm.js"],
  "sourcesContent": ["/*\n * Mesgjs @string interface - JS String wrapper\n * Author: Brian Katzung <briank@kappacs.com>\n * Copyright 2025 by Kappa Computer Solutions, LLC and Brian Katzung\n */\n\nimport { getInstance, getInterface, setRO, typeAccepts } from './runtime.esm.js';\nimport { NANOS } from './vendor.esm.js';\n\nfunction opInit (d) {\n\tsetRO(d.octx, 'js', d.mp.at(0, '').toString());\n\tsetRO(d.rr, { jsv: d.js, valueOf: () => d.js });\n}\n\n// Join strings together with an optional separator\n// a(join b c with=-) // a-b-c\nfunction opJoin (d) {\n\tconst { mp, js } = d, sep = mp.at('with') ?? '', parts = [ js ];\n\tfor (const v of mp.values()) {\n\t\tconst so = globalThis.$toMsjs(v);\n\t\tif (typeAccepts(so.msjsType, 'toString')) parts.push(so('toString'));\n\t}\n\treturn parts.join(sep);\n}\n\n// Join strings together with the receiver as separator\n// ,(joining a b c) // a,b,c\nfunction opJoining (d) {\n\tconst { mp, js } = d, parts = [];\n\tfor (const v of mp.values()) {\n\t\tconst so = globalThis.$toMsjs(v);\n\t\tif (typeAccepts(so.msjsType, 'toString')) parts.push(so('toString'));\n\t}\n\treturn parts.join(js);\n}\n\nfunction opReplace (d, all = false) {\n\tconst rawPat = d.mp.at(0, ''), pat = (rawPat?.msjsType === '@regex')? rawPat.jsv : rawPat;\n\tconst rawRep = d.mp.at(1, ''), rep = (rawRep?.msjsType === '@function') ? replWrapper.bind({ msjsfn: rawRep }) : rawRep;\n\treturn (all ? d.js.replaceAll(pat, rep) : d.js.replace(pat, rep));\n}\n\nfunction opSplit (d) {\n\tconst rawSep = d.mp.at(0, ''), sep = (rawSep?.msjsType === '@regex') ? rawSep.jsv : rawSep;\n\treturn new NANOS(d.js.split(sep, d.mp.at(1)));\n}\n\n// JS-to-Msjs replacement-function wrapper\nfunction replWrapper (...args) {\n\t/*\n\t * Transform this rather awkward JS signature to a nice, clean Msjs one\n\t * (match, p1, p2, ..., pN, offset, string, groups?)\n\t */\n\tconst match = args.shift(), [ groups ] = args.slice(-1), hasG = typeof groups === 'object';\n\tconst [ offset, string ] = args.splice(hasG ? -3 : -2);\n\tconst mp = new NANOS(args, { match, offset, string }, hasG ? { groups: new NANOS(groups) } : []);\n\treturn this.msjsfn('call', mp);\n}\n\nexport function install () {\n\tgetInterface('@string').set({\n\t\tfinal: true, lock: true, pristine: true,\n\t\thandlers: {\n\t\t\t'@init': opInit,\n\t\t\t'@jsv': d => d.js,\n\t\t\t'=': d => d.js === d.mp.at(0), // eq\n\t\t\t'>=': d => d.js >= d.mp.at(0), // ge\n\t\t\t'>': d => d.js > d.mp.at(0), // gt\n\t\t\t'+': opJoin,\n\t\t\t'-': opJoining,\n\t\t\t'<=': d => d.js <= d.mp.at(0), // le\n\t\t\t'<': d => d.js < d.mp.at(0), // lt\n\t\t\t'!=': d => d.js !== d.mp.at(0), // ne\n\t\t\tat: d => d.js.at(d.mp.at(0, 0)),\n\t\t\tcharAt: d => d.js.charAt(d.mp.at(0, 0)),\n\t\t\tcharCodeAt: d => d.js.charCodeAt(d.mp.at(0, 0)),\n\t\t\tcodePointAt: d => d.js.codePointAt(d.mp.at(0, 0)),\n\t\t\tendsWith: d => d.js.endsWith(d.mp.at(0, ''), d.mp.at(1, d.js.length)),\n\t\t\teq: d => d.js === d.mp.at(0),\n\t\t\tescRE: d => RegExp.escape(d.js),\t// regex-escaped version\n\t\t\tge: d => d.js >= d.mp.at(0),\n\t\t\tgt: d => d.js > d.mp.at(0),\n\t\t\tincludes: d => d.js.includes(d.mp.at(0, '')),\n\t\t\tindexOf: d => d.js.indexOf(d.mp.at(0, ''), d.mp.at(1, 0)),\n\t\t\tisWellFormed: d => d.js.isWellFormed(),\n\t\t\tjoin: opJoin,\n\t\t\tjoining: opJoining,\n\t\t\tlastIndexOf: d => d.js.lastIndexOf(d.mp.at(0, ''), d.mp.at(1, Infinity)),\n\t\t\tle: d => d.js <= d.mp.at(0),\n\t\t\tlength: d => d.js.length,\n\t\t\tlt: d => d.js < d.mp.at(0),\n\t\t\tne: d => d.js !== d.mp.at(0),\n\t\t\tnormalize: d => d.js.normalize(d.mp.at(0, 'NFC')),\n\t\t\tpadEnd: d => d.js.padEnd(d.mp.at(0, 0), d.mp.at(1, ' ')),\n\t\t\tpadStart: d => d.js.padStart(d.mp.at(0, 0), d.mp.at(1, ' ')),\n\t\t\tre: d => getInstance('@regex', [ d.js, d.mp.at(0, '') ]),\n\t\t\trepeat: d => d.js.repeat(d.mp.at(0, 0)),\n\t\t\treplace: d => opReplace(d),\n\t\t\treplaceAll: d => opReplace(d, true),\n\t\t\tslice: d => d.js.slice(d.mp.at(0, 0), d.mp.at(1, d.js.length)),\n\t\t\tsplit: opSplit,\n\t\t\tstartsWith: d => d.js.startsWith(d.mp.at(0, ''), d.mp.at(1, 0)),\n\t\t\tsubstring: d => d.js.substring(d.mp.at(0, 0), d.mp.at(1, d.js.length)),\n\t\t\ttoBigInt: d => BigInt(d.js),\n\t\t\ttoFloat: d => parseFloat(d.js),\n\t\t\ttoInt: d => parseInt(d.js, d.mp.at(0, 10)),\n\t\t\ttoLower: d => d.js.toLowerCase(),\n\t\t\ttoString: d => d.js,\n\t\t\ttoUpper: d => d.js.toUpperCase(),\n\t\t\ttrim: d => d.js.trim(),\n\t\t\ttrimEnd: d => d.js.trimEnd(),\n\t\t\ttrimStart: d => d.js.trimStart(),\n\t\t\tvalueOf: d => d.js,\n\t\t},\n\t\tcacheHints: {\n\t\t\t'@init': 'pin',\n\t\t},\n\t});\n}\n\n// END\n"],
  "mappings": "AAMA,OAAS,eAAAA,EAAa,gBAAAC,EAAc,SAAAC,EAAO,eAAAC,MAAmB,mBAC9D,OAAS,SAAAC,MAAa,kBAEtB,SAASC,EAAQC,EAAG,CACnBJ,EAAMI,EAAE,KAAM,KAAMA,EAAE,GAAG,GAAG,EAAG,EAAE,EAAE,SAAS,CAAC,EAC7CJ,EAAMI,EAAE,GAAI,CAAE,IAAKA,EAAE,GAAI,QAAS,IAAMA,EAAE,EAAG,CAAC,CAC/C,CAIA,SAASC,EAAQD,EAAG,CACnB,KAAM,CAAE,GAAAE,EAAI,GAAAC,CAAG,EAAIH,EAAGI,EAAMF,EAAG,GAAG,MAAM,GAAK,GAAIG,EAAQ,CAAEF,CAAG,EAC9D,UAAWG,KAAKJ,EAAG,OAAO,EAAG,CAC5B,MAAMK,EAAK,WAAW,QAAQD,CAAC,EAC3BT,EAAYU,EAAG,SAAU,UAAU,GAAGF,EAAM,KAAKE,EAAG,UAAU,CAAC,CACpE,CACA,OAAOF,EAAM,KAAKD,CAAG,CACtB,CAIA,SAASI,EAAWR,EAAG,CACtB,KAAM,CAAE,GAAAE,EAAI,GAAAC,CAAG,EAAIH,EAAGK,EAAQ,CAAC,EAC/B,UAAWC,KAAKJ,EAAG,OAAO,EAAG,CAC5B,MAAMK,EAAK,WAAW,QAAQD,CAAC,EAC3BT,EAAYU,EAAG,SAAU,UAAU,GAAGF,EAAM,KAAKE,EAAG,UAAU,CAAC,CACpE,CACA,OAAOF,EAAM,KAAKF,CAAE,CACrB,CAEA,SAASM,EAAWT,EAAGU,EAAM,GAAO,CACnC,MAAMC,EAASX,EAAE,GAAG,GAAG,EAAG,EAAE,EAAGY,EAAOD,GAAQ,WAAa,SAAWA,EAAO,IAAMA,EAC7EE,EAASb,EAAE,GAAG,GAAG,EAAG,EAAE,EAAGc,EAAOD,GAAQ,WAAa,YAAeE,EAAY,KAAK,CAAE,OAAQF,CAAO,CAAC,EAAIA,EACjH,OAAQH,EAAMV,EAAE,GAAG,WAAWY,EAAKE,CAAG,EAAId,EAAE,GAAG,QAAQY,EAAKE,CAAG,CAChE,CAEA,SAASE,EAAShB,EAAG,CACpB,MAAMiB,EAASjB,EAAE,GAAG,GAAG,EAAG,EAAE,EAAGI,EAAOa,GAAQ,WAAa,SAAYA,EAAO,IAAMA,EACpF,OAAO,IAAInB,EAAME,EAAE,GAAG,MAAMI,EAAKJ,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAC7C,CAGA,SAASe,KAAgBG,EAAM,CAK9B,MAAMC,EAAQD,EAAK,MAAM,EAAG,CAAEE,CAAO,EAAIF,EAAK,MAAM,EAAE,EAAGG,EAAO,OAAOD,GAAW,SAC5E,CAAEE,EAAQC,CAAO,EAAIL,EAAK,OAAOG,EAAO,GAAK,EAAE,EAC/CnB,EAAK,IAAIJ,EAAMoB,EAAM,CAAE,MAAAC,EAAO,OAAAG,EAAQ,OAAAC,CAAO,EAAGF,EAAO,CAAE,OAAQ,IAAIvB,EAAMsB,CAAM,CAAE,EAAI,CAAC,CAAC,EAC/F,OAAO,KAAK,OAAO,OAAQlB,CAAE,CAC9B,CAEO,SAASsB,GAAW,CAC1B7B,EAAa,SAAS,EAAE,IAAI,CAC3B,MAAO,GAAM,KAAM,GAAM,SAAU,GACnC,SAAU,CACT,QAASI,EACT,OAAQC,GAAKA,EAAE,GACf,IAAKA,GAAKA,EAAE,KAAOA,EAAE,GAAG,GAAG,CAAC,EAC5B,KAAMA,GAAKA,EAAE,IAAMA,EAAE,GAAG,GAAG,CAAC,EAC5B,IAAKA,GAAKA,EAAE,GAAKA,EAAE,GAAG,GAAG,CAAC,EAC1B,IAAKC,EACL,IAAKO,EACL,KAAMR,GAAKA,EAAE,IAAMA,EAAE,GAAG,GAAG,CAAC,EAC5B,IAAKA,GAAKA,EAAE,GAAKA,EAAE,GAAG,GAAG,CAAC,EAC1B,KAAMA,GAAKA,EAAE,KAAOA,EAAE,GAAG,GAAG,CAAC,EAC7B,GAAIA,GAAKA,EAAE,GAAG,GAAGA,EAAE,GAAG,GAAG,EAAG,CAAC,CAAC,EAC9B,OAAQA,GAAKA,EAAE,GAAG,OAAOA,EAAE,GAAG,GAAG,EAAG,CAAC,CAAC,EACtC,WAAYA,GAAKA,EAAE,GAAG,WAAWA,EAAE,GAAG,GAAG,EAAG,CAAC,CAAC,EAC9C,YAAaA,GAAKA,EAAE,GAAG,YAAYA,EAAE,GAAG,GAAG,EAAG,CAAC,CAAC,EAChD,SAAUA,GAAKA,EAAE,GAAG,SAASA,EAAE,GAAG,GAAG,EAAG,EAAE,EAAGA,EAAE,GAAG,GAAG,EAAGA,EAAE,GAAG,MAAM,CAAC,EACpE,GAAIA,GAAKA,EAAE,KAAOA,EAAE,GAAG,GAAG,CAAC,EAC3B,MAAOA,GAAK,OAAO,OAAOA,EAAE,EAAE,EAC9B,GAAIA,GAAKA,EAAE,IAAMA,EAAE,GAAG,GAAG,CAAC,EAC1B,GAAIA,GAAKA,EAAE,GAAKA,EAAE,GAAG,GAAG,CAAC,EACzB,SAAUA,GAAKA,EAAE,GAAG,SAASA,EAAE,GAAG,GAAG,EAAG,EAAE,CAAC,EAC3C,QAASA,GAAKA,EAAE,GAAG,QAAQA,EAAE,GAAG,GAAG,EAAG,EAAE,EAAGA,EAAE,GAAG,GAAG,EAAG,CAAC,CAAC,EACxD,aAAcA,GAAKA,EAAE,GAAG,aAAa,EACrC,KAAMC,EACN,QAASO,EACT,YAAaR,GAAKA,EAAE,GAAG,YAAYA,EAAE,GAAG,GAAG,EAAG,EAAE,EAAGA,EAAE,GAAG,GAAG,EAAG,GAAQ,CAAC,EACvE,GAAIA,GAAKA,EAAE,IAAMA,EAAE,GAAG,GAAG,CAAC,EAC1B,OAAQA,GAAKA,EAAE,GAAG,OAClB,GAAIA,GAAKA,EAAE,GAAKA,EAAE,GAAG,GAAG,CAAC,EACzB,GAAIA,GAAKA,EAAE,KAAOA,EAAE,GAAG,GAAG,CAAC,EAC3B,UAAWA,GAAKA,EAAE,GAAG,UAAUA,EAAE,GAAG,GAAG,EAAG,KAAK,CAAC,EAChD,OAAQA,GAAKA,EAAE,GAAG,OAAOA,EAAE,GAAG,GAAG,EAAG,CAAC,EAAGA,EAAE,GAAG,GAAG,EAAG,GAAG,CAAC,EACvD,SAAUA,GAAKA,EAAE,GAAG,SAASA,EAAE,GAAG,GAAG,EAAG,CAAC,EAAGA,EAAE,GAAG,GAAG,EAAG,GAAG,CAAC,EAC3D,GAAIA,GAAKN,EAAY,SAAU,CAAEM,EAAE,GAAIA,EAAE,GAAG,GAAG,EAAG,EAAE,CAAE,CAAC,EACvD,OAAQA,GAAKA,EAAE,GAAG,OAAOA,EAAE,GAAG,GAAG,EAAG,CAAC,CAAC,EACtC,QAASA,GAAKS,EAAUT,CAAC,EACzB,WAAYA,GAAKS,EAAUT,EAAG,EAAI,EAClC,MAAOA,GAAKA,EAAE,GAAG,MAAMA,EAAE,GAAG,GAAG,EAAG,CAAC,EAAGA,EAAE,GAAG,GAAG,EAAGA,EAAE,GAAG,MAAM,CAAC,EAC7D,MAAOgB,EACP,WAAYhB,GAAKA,EAAE,GAAG,WAAWA,EAAE,GAAG,GAAG,EAAG,EAAE,EAAGA,EAAE,GAAG,GAAG,EAAG,CAAC,CAAC,EAC9D,UAAWA,GAAKA,EAAE,GAAG,UAAUA,EAAE,GAAG,GAAG,EAAG,CAAC,EAAGA,EAAE,GAAG,GAAG,EAAGA,EAAE,GAAG,MAAM,CAAC,EACrE,SAAUA,GAAK,OAAOA,EAAE,EAAE,EAC1B,QAASA,GAAK,WAAWA,EAAE,EAAE,EAC7B,MAAOA,GAAK,SAASA,EAAE,GAAIA,EAAE,GAAG,GAAG,EAAG,EAAE,CAAC,EACzC,QAASA,GAAKA,EAAE,GAAG,YAAY,EAC/B,SAAUA,GAAKA,EAAE,GACjB,QAASA,GAAKA,EAAE,GAAG,YAAY,EAC/B,KAAMA,GAAKA,EAAE,GAAG,KAAK,EACrB,QAASA,GAAKA,EAAE,GAAG,QAAQ,EAC3B,UAAWA,GAAKA,EAAE,GAAG,UAAU,EAC/B,QAASA,GAAKA,EAAE,EACjB,EACA,WAAY,CACX,QAAS,KACV,CACD,CAAC,CACF",
  "names": ["getInstance", "getInterface", "setRO", "typeAccepts", "NANOS", "opInit", "d", "opJoin", "mp", "js", "sep", "parts", "v", "so", "opJoining", "opReplace", "all", "rawPat", "pat", "rawRep", "rep", "replWrapper", "opSplit", "rawSep", "args", "match", "groups", "hasG", "offset", "string", "install"]
}
