{
  "version": 3,
  "sources": ["../../src/runtime/mesgjs.esm.js"],
  "sourcesContent": ["/*\n * Mesgjs Entry-Point Module And Runtime Local Configuration\n *\n * Author: Brian Katzung <briank@kappacs.com>\n * Copyright 2025 by Kappa Computer Solutions, LLC and Brian Katzung\n */\n\n// @core and post-@core foundation-class installers\nimport { install as installCore } from './msjs-core.esm.js';\nimport { install as installBoolean } from './js-boolean.esm.js';\nimport { install as installJSArray } from './js-array.esm.js';\nimport { install as installJSObject } from './js-object.esm.js';\nimport { install as installList } from './msjs-list.esm.js';\nimport { install as installKVIter } from './msjs-kv-iter.esm.js';\nimport { install as installLoop } from './msjs-loop.esm.js';\nimport { install as installMap } from './js-map.esm.js';\nimport { install as installNull } from './js-null.esm.js';\nimport { install as installNumber } from './js-number.esm.js';\nimport { install as installPromise } from './js-promise.esm.js';\nimport { install as installReactive } from './msjs-reactive.esm.js';\nimport { install as installRegex } from './js-regex.esm.js';\nimport { install as installSet } from './js-set.esm.js';\nimport { install as installString } from './js-string.esm.js';\nimport { install as installTry } from './msjs-try.esm.js';\nimport { install as installUndefined } from './js-undefined.esm.js';\n\nimport { getInstance, initialize, setModMeta, setRO } from './runtime.esm.js';\nimport { NANOS } from './vendor.esm.js';\nimport { isPlainObject } from './unified-list.esm.js';\n\n// The minimum \"main program\":\n// import { setModMeta } from '.../mesgjs.esm.js';\n// setModMeta({ config });\nexport { setModMeta };\n\nconst instanceSym = Symbol.for('msjsInstance');\nconst convertSym = Symbol.for('toMsjs');\nconst instances = new WeakMap();\n\n// Guaranteed-load, @-interface extension modules\nfunction installCoreExtensions () {\n\t/*\n\t * This JavaScript class is foundational to the language.\n\t * Help lots of modules (especially JavaScript-based loadable\n\t * interface modules) avoid dealing with import-vendoring it.\n\t */\n\tglobalThis.NANOS = NANOS;\n\n\t// @core should always be installed first\n\tinstallCore('@core');\n\tif (!globalThis.$c) throw new Error('@core installation incomplete');\n\n\t// Attach some additional runtime-related properties, then lock it\n\tsetRO($c, 'symbols', {\n\t\tconvert: convertSym,\n\t\tinstance: instanceSym,\n\t});\n\tObject.freeze($c.symbols);\n\tObject.freeze($c);\n\n\tinstallBoolean();\n\tinstallJSArray('@jsArray');\n\tinstallJSObject('@jsObject');\n\tinstallKVIter('@kvIter');\n\tinstallList('@list');\n\t// Teach toMsjs how to convert NANOS to a Msjs @list\n\tNANOS.prototype[convertSym] = function () {\n\t\treturn getInstance('@list', [this]);\n\t}\n\tinstallLoop('@loop');\n\tinstallMap('@map');\n\tinstallNull();\n\tinstallNumber();\n\tinstallPromise('@promise');\n\tinstallReactive('@reactive');\n\tinstallRegex();\n\tinstallSet('@set');\n\tinstallString();\n\tinstallTry('@try');\n\tinstallUndefined();\n}\n\n// Promote a JS object to a Msjs object for messaging\nfunction toMsjs (jsv) {\n\tif (jsv?.msjsType) return jsv;\n\tlet instance;\n\tswitch (typeof jsv) {\n\tcase 'boolean':\n\t\treturn getInstance(jsv ? '@true' : '@false');\n\tcase 'bigint':\n\tcase 'number':\n\t\treturn getInstance('@number', [jsv]);\n\tcase 'object':\n\t\tif (jsv === null) return getInstance('@null');\n\t\tinstance = jsv[instanceSym] || instances.get(jsv);\n\t\tif (!instance) {\n\t\t\tif (jsv[convertSym]) instance = jsv[convertSym]();\n\t\t\telse if (jsv instanceof RegExp) instance = getInstance('@regex', [jsv]);\n\t\t\telse if (Array.isArray(jsv)) instance = getInstance('@jsArray', [jsv]);\n\t\t\telse if (jsv instanceof Map) instance = getInstance('@map', [jsv]);\n\t\t\telse if (jsv instanceof Set) instance = getInstance('@set', [jsv]);\n\t\t\telse if (isPlainObject(jsv)) instance = getInstance('@jsObject', [jsv]);\n\t\t\tif (instance) instances.set(jsv, instance);\n\t\t}\n\t\tif (instance) return instance;\n\t\treturn getInstance('@undefined');\n\tcase 'string':\n\t\treturn getInstance('@string', [jsv]);\n\tdefault:\n\t\treturn getInstance('@undefined');\n\t}\n}\n\nsetRO(globalThis, '$toMsjs', toMsjs);\ninitialize(installCoreExtensions);\n\n// END\n"],
  "mappings": "AAQA,OAAS,WAAWA,MAAmB,qBACvC,OAAS,WAAWC,MAAsB,sBAC1C,OAAS,WAAWC,MAAsB,oBAC1C,OAAS,WAAWC,MAAuB,qBAC3C,OAAS,WAAWC,MAAmB,qBACvC,OAAS,WAAWC,MAAqB,wBACzC,OAAS,WAAWC,MAAmB,qBACvC,OAAS,WAAWC,MAAkB,kBACtC,OAAS,WAAWC,MAAmB,mBACvC,OAAS,WAAWC,MAAqB,qBACzC,OAAS,WAAWC,MAAsB,sBAC1C,OAAS,WAAWC,MAAuB,yBAC3C,OAAS,WAAWC,MAAoB,oBACxC,OAAS,WAAWC,MAAkB,kBACtC,OAAS,WAAWC,MAAqB,qBACzC,OAAS,WAAWC,MAAkB,oBACtC,OAAS,WAAWC,MAAwB,wBAE5C,OAAS,eAAAC,EAAa,cAAAC,EAAY,cAAAC,EAAY,SAAAC,MAAa,mBAC3D,OAAS,SAAAC,MAAa,kBACtB,OAAS,iBAAAC,MAAqB,wBAO9B,MAAMC,EAAc,OAAO,IAAI,cAAc,EACvCC,EAAa,OAAO,IAAI,QAAQ,EAChCC,EAAY,IAAI,QAGtB,SAASC,GAAyB,CAUjC,GAJA,WAAW,MAAQL,EAGnBrB,EAAY,OAAO,EACf,CAAC,WAAW,GAAI,MAAM,IAAI,MAAM,+BAA+B,EAGnEoB,EAAM,GAAI,UAAW,CACpB,QAASI,EACT,SAAUD,CACX,CAAC,EACD,OAAO,OAAO,GAAG,OAAO,EACxB,OAAO,OAAO,EAAE,EAEhBtB,EAAe,EACfC,EAAe,UAAU,EACzBC,EAAgB,WAAW,EAC3BE,EAAc,SAAS,EACvBD,EAAY,OAAO,EAEnBiB,EAAM,UAAUG,CAAU,EAAI,UAAY,CACzC,OAAOP,EAAY,QAAS,CAAC,IAAI,CAAC,CACnC,EACAX,EAAY,OAAO,EACnBC,EAAW,MAAM,EACjBC,EAAY,EACZC,EAAc,EACdC,EAAe,UAAU,EACzBC,EAAgB,WAAW,EAC3BC,EAAa,EACbC,EAAW,MAAM,EACjBC,EAAc,EACdC,EAAW,MAAM,EACjBC,EAAiB,CAClB,CAGA,SAASW,EAAQC,EAAK,CACrB,GAAIA,GAAK,SAAU,OAAOA,EAC1B,IAAIC,EACJ,OAAQ,OAAOD,EAAK,CACpB,IAAK,UACJ,OAAOX,EAAYW,EAAM,QAAU,QAAQ,EAC5C,IAAK,SACL,IAAK,SACJ,OAAOX,EAAY,UAAW,CAACW,CAAG,CAAC,EACpC,IAAK,SACJ,OAAIA,IAAQ,KAAaX,EAAY,OAAO,GAC5CY,EAAWD,EAAIL,CAAW,GAAKE,EAAU,IAAIG,CAAG,EAC3CC,IACAD,EAAIJ,CAAU,EAAGK,EAAWD,EAAIJ,CAAU,EAAE,EACvCI,aAAe,OAAQC,EAAWZ,EAAY,SAAU,CAACW,CAAG,CAAC,EAC7D,MAAM,QAAQA,CAAG,EAAGC,EAAWZ,EAAY,WAAY,CAACW,CAAG,CAAC,EAC5DA,aAAe,IAAKC,EAAWZ,EAAY,OAAQ,CAACW,CAAG,CAAC,EACxDA,aAAe,IAAKC,EAAWZ,EAAY,OAAQ,CAACW,CAAG,CAAC,EACxDN,EAAcM,CAAG,IAAGC,EAAWZ,EAAY,YAAa,CAACW,CAAG,CAAC,GAClEC,GAAUJ,EAAU,IAAIG,EAAKC,CAAQ,GAEtCA,GACGZ,EAAY,YAAY,GAChC,IAAK,SACJ,OAAOA,EAAY,UAAW,CAACW,CAAG,CAAC,EACpC,QACC,OAAOX,EAAY,YAAY,CAChC,CACD,CAEAG,EAAM,WAAY,UAAWO,CAAM,EACnCT,EAAWQ,CAAqB",
  "names": ["installCore", "installBoolean", "installJSArray", "installJSObject", "installList", "installKVIter", "installLoop", "installMap", "installNull", "installNumber", "installPromise", "installReactive", "installRegex", "installSet", "installString", "installTry", "installUndefined", "getInstance", "initialize", "setModMeta", "setRO", "NANOS", "isPlainObject", "instanceSym", "convertSym", "instances", "installCoreExtensions", "toMsjs", "jsv", "instance"]
}
