import{install as o}from"./msjs-core.esm.js";import{install as m}from"./js-boolean.esm.js";import{install as f}from"./js-array.esm.js";import{install as c}from"./js-object.esm.js";import{install as p}from"./msjs-list.esm.js";import{install as u}from"./msjs-kv-iter.esm.js";import{install as b}from"./msjs-loop.esm.js";import{install as y}from"./js-map.esm.js";import{install as g}from"./js-null.esm.js";import{install as S}from"./js-number.esm.js";import{install as O}from"./js-promise.esm.js";import{install as d}from"./msjs-reactive.esm.js";import{install as M}from"./js-regex.esm.js";import{install as A}from"./js-set.esm.js";import{install as h}from"./js-string.esm.js";import{install as N}from"./msjs-try.esm.js";import{install as x}from"./js-undefined.esm.js";import{getInstance as l,initialize as T,setModMeta as $,setRO as r}from"./runtime.esm.js";import{NANOS as n}from"./vendor.esm.js";import{isPlainObject as w}from"./unified-list.esm.js";const s=Symbol.for("msjsInstance"),e=Symbol.for("toMsjs"),a=new WeakMap;function I(){if(globalThis.NANOS=n,o("@core"),!globalThis.$c)throw new Error("@core installation incomplete");r($c,"symbols",{convert:e,instance:s}),Object.freeze($c.symbols),Object.freeze($c),m(),f("@jsArray"),c("@jsObject"),u("@kvIter"),p("@list"),n.prototype[e]=function(){return l("@list",[this])},b("@loop"),y("@map"),g(),S(),O("@promise"),d("@reactive"),M(),A("@set"),h(),N("@try"),x()}function R(t){if(t?.msjsType)return t;let i;switch(typeof t){case"boolean":return l(t?"@true":"@false");case"bigint":case"number":return l("@number",[t]);case"object":return t===null?l("@null"):(i=t[s]||a.get(t),i||(t[e]?i=t[e]():t instanceof RegExp?i=l("@regex",[t]):Array.isArray(t)?i=l("@jsArray",[t]):t instanceof Map?i=l("@map",[t]):t instanceof Set?i=l("@set",[t]):w(t)&&(i=l("@jsObject",[t])),i&&a.set(t,i)),i||l("@undefined"));case"string":return l("@string",[t]);default:return l("@undefined")}}r(globalThis,"$toMsjs",R),T(I);export{$ as setModMeta};
