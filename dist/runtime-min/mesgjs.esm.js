import{install as s}from"./msjs-boolean.esm.js";import{install as o}from"./msjs-core.esm.js";import{install as a}from"./js-array.esm.js";import{install as m}from"./msjs-list.esm.js";import{install as f}from"./msjs-kv-iter.esm.js";import{install as c}from"./msjs-loop.esm.js";import{install as p}from"./msjs-map.esm.js";import{install as u}from"./msjs-null.esm.js";import{install as y}from"./msjs-number.esm.js";import{install as b}from"./msjs-promise.esm.js";import{install as g}from"./msjs-reactive.esm.js";import{install as S}from"./msjs-regex.esm.js";import{install as d}from"./msjs-set.esm.js";import{install as M}from"./msjs-string.esm.js";import{install as A}from"./msjs-try.esm.js";import{install as h}from"./msjs-undefined.esm.js";import{getInstance as r,initialize as x,setModMeta as N,setRO as l}from"./runtime.esm.js";import{NANOS as e}from"./vendor.esm.js";const n=Symbol.for("msjsInstance"),i=Symbol.for("toMsjs");function O(){if(globalThis.NANOS=e,o("@core"),!globalThis.$c)throw new Error("@core installation incomplete");l($c,"symbols",{convert:i,instance:n}),Object.freeze($c.symbols),Object.freeze($c),s(),a("@jsArray"),f("@kvIter"),m("@list"),e.prototype[i]=function(){return r("@list",[this])},c("@loop"),p("@map"),u(),y(),b("@promise"),g("@reactive"),S(),d("@set"),M(),A("@try"),h()}function T(t){if(t?.msjsType)return t;switch(typeof t){case"boolean":return r(t?"@true":"@false");case"bigint":case"number":return r("@number",t);case"object":return t===null?r("@null"):t[n]?t[n]:t[i]?t[i]():t instanceof RegExp?r("@regex",t):Array.isArray(t)?r("@jsArray",[t]):t instanceof Map?r("@map",[t]):t instanceof Set?r("@set",[t]):r("@undefined");case"string":return r("@string",t);default:return r("@undefined")}}l(globalThis,{installMsjsCoreExtensions:O,$toMsjs:T}),x();export{N as setModMeta};
