{
  "version": 3,
  "sources": ["../../src/runtime/msjs-list.esm.js"],
  "sourcesContent": ["/*\n * Mesgjs NANOS wrapper interface\n * Author: Brian Katzung <briank@kappacs.com>\n * Copyright 2025 by Kappa Computer Solutions, LLC and Brian Katzung\n */\n\nimport { getInstance, getInterface, runIfCode, setRO } from './runtime.esm.js';\nimport { unifiedList, uniAt } from './unified-list.esm.js';\n\nfunction opInit (d) {\n\tconst { octx, mp } = d, list = mp.at(0);\n\tsetRO(octx, 'js', (list instanceof NANOS) ? list : new NANOS());\n\tsetRO(d.rr, { jsv: d.js, valueOf: () => d.js });\n}\n\nfunction opAt (d) {\n\tconst { mp } = d, path = mp.has('path') ? unifiedList(mp.at('path')).values() : mp.values();\n\treturn uniAt(d.js, [...path], { wrap: true, raw: mp.at('raw'),\n\t  defaultFn: () => {\n\t\tif (mp.has('else')) return runIfCode(mp.at('else'));\n\t\telse throw new Error('Key path not found');\n\t}});\n}\n\nfunction doGet () {\n\tif (this.list.has(this.key)) return this.list.at(this.key);\n\tif (this.hasElse) return runIfCode(this.elseVal);\n\tthrow new Error(`Required key ${this.key} not present`);\n}\n\nfunction opGetter (d) {\n\tconst { js: list, mp } = d;\n\tconst key = mp.at(0), hasElse = mp.has('else'), elseVal = mp.at('else');\n\treturn d.b({ cd: doGet.bind({ list, key, hasElse, elseVal }) });\n}\n\nfunction opNext (d) {\n\tif (d.mp.has(0)) {\n\t\td.js.next = d.mp.at(0);\n\t\treturn d.rr;\n\t}\n\treturn d.js.next;\n}\n\nfunction opNset (d) {\n\tconst { mp, js } = d;\n\tfor (const e of mp.entries()) js.set(e[0], e[1]);\n}\n\nfunction opRIO (d) {\n\tconst { js, mp } = d;\n\tif (mp.has(0)) {\n\t\tlet rio = mp.at(0);\n\t\tif (rio === true) rio = getInstance('@reactive')('rio');\n\t\tjs.rio = rio;\t\t\t// NANOS will validate\n\t\treturn d.rr;\n\t}\n\treturn !!js.rio;\n}\n\nfunction doSet (d) {\n\tthis.list.set(this.key, d.mp.at(0), { raw: d.mp.at('raw') });\n}\n\nfunction opSetter (d) {\n\tconst { js: list, mp } = d, key = mp.at(0);\n\treturn d.b({ cd: doSet.bind({ list, key }) })('fn');\n}\n\n// Supported key types\nconst skt = k => { const t = typeof k; return t === 'string' || t === 'number' || t === 'symbol'; };\n\nfunction opSet (d) {\n\tconst { mp } = d, psrc = mp.has('path') ? unifiedList(mp.at('path')).values() : mp.values();\n\tconst path = [...psrc].filter(k => skt(k)), limit = path.length - (mp.has('to') ? 1 : 0);\n\tlet cur = d.js;\n\tfor (let i = 0; i < limit; ++i) {\n\t\tconst k = path[i];\n\t\tif (!(cur.at(k) instanceof NANOS)) cur.set(k, cur.similar());\n\t\tcur = cur.at(k);\n\t}\n\tif (mp.has('to')) cur.set(path[limit], mp.at('to'), mp.at('insert'));\n\telse {\n\t\tif (mp.has('first')) cur.unshift(mp.at('first'));\n\t\tif (mp.has('next')) cur.push(mp.at('next'));\n\t}\n}\n\nexport function install (name) {\n\tgetInterface(name).set({\n\t\tlock: true, pristine: true,\n\t\thandlers: {\n\t\t\t'@init': opInit,\n\t\t\t'@jsv': d => d.js,\n\t\t\t'@': opAt,\n\t\t\t'==': opNset,\n\t\t\t'>': d => d.js.pop(),\n\t\t\t'|+': d => d.js.push(d.mp),\n\t\t\t'=': opSet,\n\t\t\t'<': d => d.js.shift(),\n\t\t\t'+|': d => d.js.unshift(d.mp),\n\t\t\tat: opAt,\n\t\t\t// autoPromote\n\t\t\tclear: d => d.js.clear(),\n\t\t\tcopy: d => new NANOS().fromPairs(d.js.pairs()),\n\t\t\tdelete: d => d.js.delete(d.mp.at(0)),\n\t\t\tdepend: d => d.js.depend(),\n\t\t\tentries: d => new NANOS([...d.js.entries()]),\n\t\t\t// filter: use @kvIter\n\t\t\t// find: use @kvIter\n\t\t\t// findLast: use @kvIter\n\t\t\t// forEach: use @kvIter\n\t\t\tget: opAt,\n\t\t\tgetter: opGetter,\n\t\t\thas: d => d.js.has(d.mp.at(0)),\n\t\t\tincludes: d => d.js.includes(d.mp.at(0)),\n\t\t\tindexEntries: d => new NANOS([...d.js.indexEntries(d.mp.at(0))]),\n\t\t\tindexKeys: d => new NANOS([...d.js.indexKeys()]),\n\t\t\tisLocked: d => d.js.isLocked(d.mp.at(0)),\n\t\t\tisRedacted: d => d.js.isRedacted(d.mp.at(0)),\n\t\t\tkeyOf: d => d.js.keyOf(d.mp.at(0)),\n\t\t\tkeyIter: d => d.js.keys(),\n\t\t\tkeys: d => new NANOS([...d.js.keys()]),\n\t\t\tlastKeyOf: d => d.js.lastKeyOf(d.mp.at(0)),\n\t\t\tlock: d => d.js.lock(...d.mp.indexValues()),\n\t\t\tlockAll: d => d.js.lockAll(d.mp.at(0)),\n\t\t\tlockKeys: d => d.js.lockKeys(),\n\t\t\tnamedEntries: d => new NANOS([...d.js.namedEntries()]),\n\t\t\tnamedKeys: d => new NANOS([...d.js.namedKeys()]),\n\t\t\tnext: opNext,\n\t\t\tnset: opNset,\n\t\t\tpairs: d => new NANOS(d.js.pairs(d.mp.at(0))),\n\t\t\tpop: d => d.js.pop(),\n\t\t\tpush: d => d.js.push(d.mp),\n\t\t\tpush1: d => d.js.push(d.mp.at(0)),\n\t\t\tredact: d => d.js.redact(...d.mp.indexValues()),\n\t\t\treverse: d => d.js.reverse(),\n\t\t\trio: opRIO,\n\t\t\tself: d => d.js,\n\t\t\tset: opSet,\n\t\t\tsetter: opSetter,\n\t\t\tshift: d => d.js.shift(),\n\t\t\tsize: d => d.js.size,\n\t\t\ttoJSON: d => d.js.toJSON(),\n\t\t\ttoReversed: d => d.js.toReversed(),\n\t\t\ttoSLID: d => d.js.toSLID(d.mp?.storage || {}),\n\t\t\ttoString: d => d.js.toString(d.mp?.storage || {}),\n\t\t\tunshift: d => d.js.unshift(d.mp),\n\t\t\tvalues: d => new NANOS([...d.js.values()]),\n\t\t},\n\t\tcacheHints: {\n\t\t\t'@init': 'pin',\n\t\t\tat: 'pin',\n\t\t\thas: 'pin',\n\t\t\tnset: 'pin',\n\t\t\tset: 'pin',\n\t\t},\n\t});\n}\n\n// END\n"],
  "mappings": "AAMA,OAAS,eAAAA,EAAa,gBAAAC,EAAc,aAAAC,EAAW,SAAAC,MAAa,mBAC5D,OAAS,eAAAC,EAAa,SAAAC,MAAa,wBAEnC,SAASC,EAAQC,EAAG,CACnB,KAAM,CAAE,KAAAC,EAAM,GAAAC,CAAG,EAAIF,EAAGG,EAAOD,EAAG,GAAG,CAAC,EACtCN,EAAMK,EAAM,KAAOE,aAAgB,MAASA,EAAO,IAAI,KAAO,EAC9DP,EAAMI,EAAE,GAAI,CAAE,IAAKA,EAAE,GAAI,QAAS,IAAMA,EAAE,EAAG,CAAC,CAC/C,CAEA,SAASI,EAAMJ,EAAG,CACjB,KAAM,CAAE,GAAAE,CAAG,EAAIF,EAAGK,EAAOH,EAAG,IAAI,MAAM,EAAIL,EAAYK,EAAG,GAAG,MAAM,CAAC,EAAE,OAAO,EAAIA,EAAG,OAAO,EAC1F,OAAOJ,EAAME,EAAE,GAAI,CAAC,GAAGK,CAAI,EAAG,CAAE,KAAM,GAAM,IAAKH,EAAG,GAAG,KAAK,EAC1D,UAAW,IAAM,CAClB,GAAIA,EAAG,IAAI,MAAM,EAAG,OAAOP,EAAUO,EAAG,GAAG,MAAM,CAAC,EAC7C,MAAM,IAAI,MAAM,oBAAoB,CAC1C,CAAC,CAAC,CACH,CAEA,SAASI,GAAS,CACjB,GAAI,KAAK,KAAK,IAAI,KAAK,GAAG,EAAG,OAAO,KAAK,KAAK,GAAG,KAAK,GAAG,EACzD,GAAI,KAAK,QAAS,OAAOX,EAAU,KAAK,OAAO,EAC/C,MAAM,IAAI,MAAM,gBAAgB,KAAK,GAAG,cAAc,CACvD,CAEA,SAASY,EAAUP,EAAG,CACrB,KAAM,CAAE,GAAIG,EAAM,GAAAD,CAAG,EAAIF,EACnBQ,EAAMN,EAAG,GAAG,CAAC,EAAGO,EAAUP,EAAG,IAAI,MAAM,EAAGQ,EAAUR,EAAG,GAAG,MAAM,EACtE,OAAOF,EAAE,EAAE,CAAE,GAAIM,EAAM,KAAK,CAAE,KAAAH,EAAM,IAAAK,EAAK,QAAAC,EAAS,QAAAC,CAAQ,CAAC,CAAE,CAAC,CAC/D,CAEA,SAASC,EAAQX,EAAG,CACnB,OAAIA,EAAE,GAAG,IAAI,CAAC,GACbA,EAAE,GAAG,KAAOA,EAAE,GAAG,GAAG,CAAC,EACdA,EAAE,IAEHA,EAAE,GAAG,IACb,CAEA,SAASY,EAAQZ,EAAG,CACnB,KAAM,CAAE,GAAAE,EAAI,GAAAW,CAAG,EAAIb,EACnB,UAAW,KAAKE,EAAG,QAAQ,EAAGW,EAAG,IAAI,EAAE,CAAC,EAAG,EAAE,CAAC,CAAC,CAChD,CAEA,SAASC,EAAOd,EAAG,CAClB,KAAM,CAAE,GAAAa,EAAI,GAAAX,CAAG,EAAIF,EACnB,GAAIE,EAAG,IAAI,CAAC,EAAG,CACd,IAAIa,EAAMb,EAAG,GAAG,CAAC,EACjB,OAAIa,IAAQ,KAAMA,EAAMtB,EAAY,WAAW,EAAE,KAAK,GACtDoB,EAAG,IAAME,EACFf,EAAE,EACV,CACA,MAAO,CAAC,CAACa,EAAG,GACb,CAEA,SAASG,EAAOhB,EAAG,CAClB,KAAK,KAAK,IAAI,KAAK,IAAKA,EAAE,GAAG,GAAG,CAAC,EAAG,CAAE,IAAKA,EAAE,GAAG,GAAG,KAAK,CAAE,CAAC,CAC5D,CAEA,SAASiB,EAAUjB,EAAG,CACrB,KAAM,CAAE,GAAIG,EAAM,GAAAD,CAAG,EAAIF,EAAGQ,EAAMN,EAAG,GAAG,CAAC,EACzC,OAAOF,EAAE,EAAE,CAAE,GAAIgB,EAAM,KAAK,CAAE,KAAAb,EAAM,IAAAK,CAAI,CAAC,CAAE,CAAC,EAAE,IAAI,CACnD,CAGA,MAAMU,EAAMC,GAAK,CAAE,MAAM,EAAI,OAAOA,EAAG,OAAO,IAAM,UAAY,IAAM,UAAY,IAAM,QAAU,EAElG,SAASC,EAAOpB,EAAG,CAClB,KAAM,CAAE,GAAAE,CAAG,EAAIF,EACTK,EAAO,CAAC,GADWH,EAAG,IAAI,MAAM,EAAIL,EAAYK,EAAG,GAAG,MAAM,CAAC,EAAE,OAAO,EAAIA,EAAG,OAAO,CACrE,EAAE,OAAOiB,GAAKD,EAAIC,CAAC,CAAC,EAAGE,EAAQhB,EAAK,QAAUH,EAAG,IAAI,IAAI,EAAI,EAAI,GACtF,IAAIoB,EAAMtB,EAAE,GACZ,QAASuB,EAAI,EAAGA,EAAIF,EAAO,EAAEE,EAAG,CAC/B,MAAMJ,EAAId,EAAKkB,CAAC,EACVD,EAAI,GAAGH,CAAC,YAAa,OAAQG,EAAI,IAAIH,EAAGG,EAAI,QAAQ,CAAC,EAC3DA,EAAMA,EAAI,GAAGH,CAAC,CACf,CACIjB,EAAG,IAAI,IAAI,EAAGoB,EAAI,IAAIjB,EAAKgB,CAAK,EAAGnB,EAAG,GAAG,IAAI,EAAGA,EAAG,GAAG,QAAQ,CAAC,GAE9DA,EAAG,IAAI,OAAO,GAAGoB,EAAI,QAAQpB,EAAG,GAAG,OAAO,CAAC,EAC3CA,EAAG,IAAI,MAAM,GAAGoB,EAAI,KAAKpB,EAAG,GAAG,MAAM,CAAC,EAE5C,CAEO,SAASsB,EAASC,EAAM,CAC9B/B,EAAa+B,CAAI,EAAE,IAAI,CACtB,KAAM,GAAM,SAAU,GACtB,SAAU,CACT,QAAS1B,EACT,OAAQC,GAAKA,EAAE,GACf,IAAKI,EACL,KAAMQ,EACN,IAAKZ,GAAKA,EAAE,GAAG,IAAI,EACnB,KAAMA,GAAKA,EAAE,GAAG,KAAKA,EAAE,EAAE,EACzB,IAAKoB,EACL,IAAKpB,GAAKA,EAAE,GAAG,MAAM,EACrB,KAAMA,GAAKA,EAAE,GAAG,QAAQA,EAAE,EAAE,EAC5B,GAAII,EAEJ,MAAOJ,GAAKA,EAAE,GAAG,MAAM,EACvB,KAAMA,GAAK,IAAI,MAAM,EAAE,UAAUA,EAAE,GAAG,MAAM,CAAC,EAC7C,OAAQA,GAAKA,EAAE,GAAG,OAAOA,EAAE,GAAG,GAAG,CAAC,CAAC,EACnC,OAAQA,GAAKA,EAAE,GAAG,OAAO,EACzB,QAASA,GAAK,IAAI,MAAM,CAAC,GAAGA,EAAE,GAAG,QAAQ,CAAC,CAAC,EAK3C,IAAKI,EACL,OAAQG,EACR,IAAKP,GAAKA,EAAE,GAAG,IAAIA,EAAE,GAAG,GAAG,CAAC,CAAC,EAC7B,SAAUA,GAAKA,EAAE,GAAG,SAASA,EAAE,GAAG,GAAG,CAAC,CAAC,EACvC,aAAcA,GAAK,IAAI,MAAM,CAAC,GAAGA,EAAE,GAAG,aAAaA,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAC/D,UAAWA,GAAK,IAAI,MAAM,CAAC,GAAGA,EAAE,GAAG,UAAU,CAAC,CAAC,EAC/C,SAAUA,GAAKA,EAAE,GAAG,SAASA,EAAE,GAAG,GAAG,CAAC,CAAC,EACvC,WAAYA,GAAKA,EAAE,GAAG,WAAWA,EAAE,GAAG,GAAG,CAAC,CAAC,EAC3C,MAAOA,GAAKA,EAAE,GAAG,MAAMA,EAAE,GAAG,GAAG,CAAC,CAAC,EACjC,QAASA,GAAKA,EAAE,GAAG,KAAK,EACxB,KAAMA,GAAK,IAAI,MAAM,CAAC,GAAGA,EAAE,GAAG,KAAK,CAAC,CAAC,EACrC,UAAWA,GAAKA,EAAE,GAAG,UAAUA,EAAE,GAAG,GAAG,CAAC,CAAC,EACzC,KAAMA,GAAKA,EAAE,GAAG,KAAK,GAAGA,EAAE,GAAG,YAAY,CAAC,EAC1C,QAASA,GAAKA,EAAE,GAAG,QAAQA,EAAE,GAAG,GAAG,CAAC,CAAC,EACrC,SAAUA,GAAKA,EAAE,GAAG,SAAS,EAC7B,aAAcA,GAAK,IAAI,MAAM,CAAC,GAAGA,EAAE,GAAG,aAAa,CAAC,CAAC,EACrD,UAAWA,GAAK,IAAI,MAAM,CAAC,GAAGA,EAAE,GAAG,UAAU,CAAC,CAAC,EAC/C,KAAMW,EACN,KAAMC,EACN,MAAOZ,GAAK,IAAI,MAAMA,EAAE,GAAG,MAAMA,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,EAC5C,IAAKA,GAAKA,EAAE,GAAG,IAAI,EACnB,KAAMA,GAAKA,EAAE,GAAG,KAAKA,EAAE,EAAE,EACzB,MAAOA,GAAKA,EAAE,GAAG,KAAKA,EAAE,GAAG,GAAG,CAAC,CAAC,EAChC,OAAQA,GAAKA,EAAE,GAAG,OAAO,GAAGA,EAAE,GAAG,YAAY,CAAC,EAC9C,QAASA,GAAKA,EAAE,GAAG,QAAQ,EAC3B,IAAKc,EACL,KAAMd,GAAKA,EAAE,GACb,IAAKoB,EACL,OAAQH,EACR,MAAOjB,GAAKA,EAAE,GAAG,MAAM,EACvB,KAAMA,GAAKA,EAAE,GAAG,KAChB,OAAQA,GAAKA,EAAE,GAAG,OAAO,EACzB,WAAYA,GAAKA,EAAE,GAAG,WAAW,EACjC,OAAQA,GAAKA,EAAE,GAAG,OAAOA,EAAE,IAAI,SAAW,CAAC,CAAC,EAC5C,SAAUA,GAAKA,EAAE,GAAG,SAASA,EAAE,IAAI,SAAW,CAAC,CAAC,EAChD,QAASA,GAAKA,EAAE,GAAG,QAAQA,EAAE,EAAE,EAC/B,OAAQA,GAAK,IAAI,MAAM,CAAC,GAAGA,EAAE,GAAG,OAAO,CAAC,CAAC,CAC1C,EACA,WAAY,CACX,QAAS,MACT,GAAI,MACJ,IAAK,MACL,KAAM,MACN,IAAK,KACN,CACD,CAAC,CACF",
  "names": ["getInstance", "getInterface", "runIfCode", "setRO", "unifiedList", "uniAt", "opInit", "d", "octx", "mp", "list", "opAt", "path", "doGet", "opGetter", "key", "hasElse", "elseVal", "opNext", "opNset", "js", "opRIO", "rio", "doSet", "opSetter", "skt", "k", "opSet", "limit", "cur", "i", "install", "name"]
}
