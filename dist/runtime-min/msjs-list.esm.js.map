{
  "version": 3,
  "sources": ["../../src/runtime/msjs-list.esm.js"],
  "sourcesContent": ["/*\n * Mesgjs NANOS wrapper interface\n * Author: Brian Katzung <briank@kappacs.com>\n * Copyright 2025 by Kappa Computer Solutions, LLC and Brian Katzung\n */\n\nimport { getInstance, getInterface, runIfCode, setRO } from './runtime.esm.js';\nimport { unifiedList, uniAt } from './unified-list.esm.js';\n\nfunction opInit (d) {\n    const { octx, mp } = d, list = mp.at(0);\n    setRO(octx, 'js', (list instanceof NANOS) ? list : new NANOS());\n}\n\nfunction opAt (d) {\n    const { mp } = d, path = mp.has('path') ? unifiedList(mp.at('path')).values() : mp.values();\n    return uniAt(d.js, [...path], { wrap: true, raw: mp.at('raw'),\n      defaultFn: () => {\n\tif (mp.has('else')) return runIfCode(mp.at('else'));\n\telse throw new Error('Key path not found');\n    }});\n}\n\nfunction doGet () {\n    if (this.list.has(this.key)) return this.list.at(this.key);\n    if (this.hasElse) return runIfCode(this.elseVal);\n    throw new Error(`Required key ${this.key} not present`);\n}\n\nfunction opGetter (d) {\n    const { js: list, mp } = d;\n    const key = mp.at(0), hasElse = mp.has('else'), elseVal = mp.at('else');\n    return d.b({ cd: doGet.bind({ list, key, hasElse, elseVal }) });\n}\n\nfunction opNext (d) {\n    if (d.mp.has(0)) {\n\td.js.next = d.mp.at(0);\n\treturn d.rr;\n    }\n    return d.js.next;\n}\n\nfunction opNset (d) {\n    const { mp, js } = d;\n    for (const e of mp.entries()) js.set(e[0], e[1]);\n}\n\nfunction opRIO (d) {\n    const { js, mp } = d;\n    if (mp.has(0)) {\n\tlet rio = mp.at(0);\n\tif (rio === true) rio = getInstance('@reactive')('rio');\n\tjs.rio = rio;\t\t// NANOS will validate\n\treturn d.rr;\n    }\n    return !!js.rio;\n}\n\nfunction doSet (d) {\n    this.list.set(this.key, d.mp.at(0), { raw: d.mp.at('raw') });\n}\n\nfunction opSetter (d) {\n    const { js: list, mp } = d, key = mp.at(0);\n    return d.b({ cd: doSet.bind({ list, key }) })('fn');\n}\n\n// Supported key types\nconst skt = k => { const t = typeof k; return t === 'string' || t === 'number' || t === 'symbol'; };\n\nfunction opSet (d) {\n    const { mp } = d, psrc = mp.has('path') ? unifiedList(mp.at('path')).values() : mp.values();\n    const path = [...psrc].filter(k => skt(k)), limit = path.length - (mp.has('to') ? 1 : 0);\n    let cur = d.js;\n    for (let i = 0; i < limit; ++i) {\n\tconst k = path[i];\n\tif (!(cur.at(k) instanceof NANOS)) cur.set(k, cur.similar());\n\tcur = cur.at(k);\n    }\n    if (mp.has('to')) cur.set(path[limit], mp.at('to'), mp.at('insert'));\n    else {\n\tif (mp.has('first')) cur.unshift(mp.at('first'));\n\tif (mp.has('next')) cur.push(mp.at('next'));\n    }\n}\n\nexport function install (name) {\n    getInterface(name).set({\n\tlock: true, pristine: true,\n\thandlers: {\n\t    '@init': opInit,\n\t    '@jsv': d => d.js,\n\t    '@': opAt,\n\t    '==': opNset,\n\t    '>': d => d.js.pop(),\n\t    '|+': d => d.js.push(d.mp),\n\t    '=': opSet,\n\t    '<': d => d.js.shift(),\n\t    '+|': d => d.js.unshift(d.mp),\n\t    at: opAt,\n\t    // autoPromote\n\t    clear: d => d.js.clear(),\n\t    copy: d => new NANOS().fromPairs(d.js.pairs()),\n\t    delete: d => d.js.delete(d.mp.at(0)),\n\t    depend: d => d.js.depend(),\n\t    entries: d => new NANOS([...d.js.entries()]),\n\t    // filter: use @kvIter\n\t    // find: use @kvIter\n\t    // findLast: use @kvIter\n\t    // forEach: use @kvIter\n\t    get: opAt,\n\t    getter: opGetter,\n\t    has: d => d.js.has(d.mp.at(0)),\n\t    includes: d => d.js.includes(d.mp.at(0)),\n\t    indexEntries: d => new NANOS([...d.js.indexEntries(d.mp.at(0))]),\n\t    indexKeys: d => new NANOS([...d.js.indexKeys()]),\n\t    isLocked: d => d.js.isLocked(d.mp.at(0)),\n\t    isRedacted: d => d.js.isRedacted(d.mp.at(0)),\n\t    keyOf: d => d.js.keyOf(d.mp.at(0)),\n\t    keyIter: d => d.js.keys(),\n\t    keys: d => new NANOS([...d.js.keys()]),\n\t    lastKeyOf: d => d.js.lastKeyOf(d.mp.at(0)),\n\t    lock: d => d.js.lock(...d.mp.indexValues()),\n\t    lockAll: d => d.js.lockAll(d.mp.at(0)),\n\t    lockKeys: d => d.js.lockKeys(),\n\t    namedEntries: d => new NANOS([...d.js.namedEntries()]),\n\t    namedKeys: d => new NANOS([...d.js.namedKeys()]),\n\t    next: opNext,\n\t    nset: opNset,\n\t    pairs: d => new NANOS(d.js.pairs(d.mp.at(0))),\n\t    pop: d => d.js.pop(),\n\t    push: d => d.js.push(d.mp),\n\t    push1: d => d.js.push(d.mp.at(0)),\n\t    redact: d => d.js.redact(...d.mp.indexValues()),\n\t    reverse: d => d.js.reverse(),\n\t    rio: opRIO,\n\t    self: d => d.js,\n\t    set: opSet,\n\t    setter: opSetter,\n\t    shift: d => d.js.shift(),\n\t    size: d => d.js.size,\n\t    toJSON: d => d.js.toJSON(),\n\t    toReversed: d => d.js.toReversed(),\n\t    toSLID: d => d.js.toSLID(d.mp?.storage || {}),\n\t    toString: d => d.js.toString(d.mp?.storage || {}),\n\t    unshift: d => d.js.unshift(d.mp),\n\t    values: d => new NANOS([...d.js.values()]),\n\t},\n\tcacheHints: {\n\t    '@init': 'pin',\n\t    at: 'pin',\n\t    has: 'pin',\n\t    nset: 'pin',\n\t    set: 'pin',\n\t},\n    });\n}\n\n// END\n"],
  "mappings": "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",
  "names": ["getInstance", "getInterface", "runIfCode", "setRO", "unifiedList", "uniAt", "opInit", "d", "octx", "mp", "list", "opAt", "path", "doGet", "opGetter", "key", "hasElse", "elseVal", "opNext", "opNset", "js", "e", "opRIO", "rio", "doSet", "opSetter", "skt", "k", "opSet", "limit", "cur", "i", "install", "name"]
}
