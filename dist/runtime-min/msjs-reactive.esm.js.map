{
  "version": 3,
  "sources": ["../../src/runtime/msjs-reactive.esm.js"],
  "sourcesContent": ["/*\n * Mesgjs @reactive interface\n *\n * Author: Brian Katzung <briank@kappacs.com>\n * Copyright 2025 by Kappa Computer Solutions, LLC and Brian Katzung\n */\n\nimport { getInterface, runIfCode, setRO } from './runtime.esm.js';\nimport { reactive } from './vendor.esm.js';\n\nsetRO(globalThis, 'reactive', reactive);\n\nlet instType;\n\nfunction jsdef (def) {\n\tswitch (def?.msjsType) {\n\tcase '@code':\t\treturn () => def('run');\n\tcase '@function':\treturn def('jsfn');\n\tcase instType:\t\treturn def('@jsv').getter;\n\tdefault:\t\t\treturn def;\n\t}\n}\n\nfunction jsfn (fn) {\n\tswitch (fn?.msjsType) {\n\tcase '@code':\t\treturn fn('fn')('jsfn');\n\tcase '@function':\treturn fn('jsfn');\n\tdefault:\t\t\treturn fn;\n\t}\n}\n\nfunction opInit (d) {\n\tconst { mp } = d, p0 = mp.at(0);\n\t// Wrap an existing reactive or create a new one\n\tif (p0?.$reactive === reactive.type) setRO(d.octx, 'js', p0);\n\telse {\n\t\tconst cmp = mp.at('cmp'), def = mp.at('def');\n\t\tif (typeof cmp === 'function') mp.set('cmp', jsfn(cmp));\n\t\tif (typeof def === 'function') mp.set('def', jsdef(def));\n\t\tif (!mp.has('v') && mp.has(0)) mp.set('v', mp.at(0));\n\t\tsetRO(d.octx, 'js', reactive(mp?.storage || {}));\n\t}\n\tsetRO(d.js, $c.symbols.instance, d.rr, false);\n\tsetRO(d.rr, { jsv: d.js, valueOf: () => d.js });\n}\n\nfunction opBatch (d) { return reactive.batch(() => runIfCode(d.mp.at(0))); }\n\nfunction opSet (d) {\n\tconst { js, mp } = d;\n\tfor (const en of mp.entries()) {\n\t\tswitch (en[0]) {\n\t\tcase 'def':\n\t\t\tif (typeof en[1] === 'function') js.def = jsdef(en[1]);\n\t\t\tbreak;\n\t\tcase 'eager': case 'eager1': case 'eager2':\n\t\t\tjs.eager = en[1];\n\t\t\tbreak;\n\t\tcase 'v': case '0':\n\t\t\tjs.wv = en[1];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn d.rr; // Return instance for chaining\n}\n\nfunction opUntr (d) { return reactive.untracked(() => runIfCode(d.mp.at(0))); }\n\n// Return a reactive-interface object\nconst isReactive = (v) => !!reactive.typeOf(v);\nconst onSet = (n, k, v) => { // On NANOS set\n\tconst curVal = n.atRaw(k), curIsR = isReactive(curVal), newIsR = isReactive(v);\n\tif (curIsR) {\n\t\t// Current value is reactive.\n\t\tif (newIsR) curVal.def = v; // Tracking-chain of reactive values\n\t\telse curVal.wv = v; // Plain reactive value\n\t\treturn curVal; // The reactive itself does not get replaced\n\t}\n\tif (n.options.autoReactive) {\n\t\t// Automatically make new values reactive based on NANOS option\n\t\tconst r = reactive();\n\t\tif (newIsR) r.def = v;\n\t\telse r.wv = v;\n\t\treturn r;\n\t}\n\t// Keep original value\n\treturn v;\n};\nfunction rio (r) {\n\tif (!r) r = reactive();\n\treturn {\n\t\t// Basic (reactive packaging)\n\t\tbatch: reactive.batch,\n\t\tchanged: () => r.ripple(),\n\t\tcreate: rio,\n\t\tdepend: () => r.rv,\n\t\t// Extended (reactive values)\n\t\tget: (v) => v.rv,\n\t\tisReactive,\n\t\tonSet,\n\t};\n}\n\nexport function install (name) {\n\tinstType = name;\n\tgetInterface(name).set({\n\t\tlock: true, pristine: true,\n\t\thandlers: {\n\t\t\t'@init': opInit,\n\t\t\t'@jsv': (d) => d.js,\n\t\t\tbatch: opBatch,\n\t\t\tdef: (d) => d.js.def,\n\t\t\teager: (d) => d.js.eager,\n\t\t\terror: (d) => d.js.error,\n\t\t\tfv: (d) => reactive.fv(d.js),\n\t\t\trio: (d) => rio(d.js),\n\t\t\trv: (d) => d.js.rv,\n\t\t\tset: opSet,\n\t\t\tunready: (d) => d.js.unready(),\n\t\t\tuntr: opUntr,\n\t\t\twait: (d) => reactive.wait(),\n\t\t},\n\t});\n}\n\n// END\n"],
  "mappings": "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",
  "names": ["getInterface", "runIfCode", "setRO", "reactive", "instType", "jsdef", "def", "jsfn", "fn", "opInit", "d", "mp", "p0", "cmp", "opBatch", "opSet", "js", "en", "opUntr", "isReactive", "v", "onSet", "n", "k", "curVal", "curIsR", "newIsR", "r", "rio", "install", "name"]
}
