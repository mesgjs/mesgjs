{
  "version": 3,
  "sources": ["../../src/runtime/msjs-reactive.esm.js"],
  "sourcesContent": ["/*\n * Mesgjs @reactive interface\n *\n * Author: Brian Katzung <briank@kappacs.com>\n * Copyright 2025 by Kappa Computer Solutions, LLC and Brian Katzung\n */\n\nimport { getInterface, runIfCode, setRO } from './runtime.esm.js';\nimport { reactive } from './vendor.esm.js';\n\nlet instType;\n\nfunction jsdef (def) {\n    switch (def?.msjsType) {\n    case '@code':\treturn () => def('run');\n    case '@function':\treturn def('jsfn');\n    case instType:\treturn def('@jsv').getter;\n    }\n}\n\nfunction jsfn (fn) {\n    switch (fn?.msjsType) {\n    case '@code':\treturn fn('fn')('jsfn');\n    case '@function':\treturn fn('jsfn');\n    default:\t\treturn fn;\n    }\n}\n\nfunction opInit (d) {\n    const { mp } = d, p0 = mp.at(0);\n    // Wrap an existing reactive or create a new one\n    if (p0?.$reactive === reactive.type) setRO(d.octx, 'js', p0);\n    else {\n\tconst cmp = mp.at('cmp'), def = mp.at('def');\n\tif (typeof cmp === 'function') mp.set('cmp', jsfn(cmp));\n\tif (typeof def === 'function') mp.set('def', jsdef(def));\n\tif (!mp.has('v') && mp.has(0)) mp.set('v', mp.at(0));\n\tsetRO(d.octx, 'js', reactive(mp?.storage || {}));\n    }\n    setRO(d.js, $c.symbols.instance, d.rr, false);\n    setRO(d.rr, { jsv: d.js, valueOf: () => d.js });\n}\n\nfunction opBatch (d) { return reactive.batch(() => runIfCode(d.mp.at(0))); }\n\nfunction opSet (d) {\n    const { js, mp } = d;\n    for (const en of mp.entries()) {\n\tswitch (en[0]) {\n\tcase 'def':\n\t    if (typeof en[1] === 'function') js.def = jsdef(en[1]);\n\t    break;\n\tcase 'eager': case 'eager1': case 'eager2':\n\t    js.eager = en[1];\n\t    break;\n\tcase 'v': case '0':\n\t    js.wv = en[1];\n\t    break;\n\t}\n    }\n    return js;\n}\n\nfunction opUntr (d) { return reactive.untracked(() => runIfCode(d.mp.at(0))); }\n\n// Return a reactive-interface object\nconst isReactive = (v) => !!reactive.typeOf(v);\nconst onSet = (n, k, v) => { // On NANOS set\n    const curVal = n.atRaw(k), curIsR = isReactive(curVal), newIsR = isReactive(v);\n    if (curIsR) {\n\t// Current value is reactive.\n\tif (newIsR) curVal.def = v; // Tracking-chain of reactive values\n\telse curVal.wv = v; // Plain reactive value\n\treturn curVal; // The reactive itself does not get replaced\n    }\n    if (n.options.autoReactive) {\n\t// Automatically make new values reactive based on NANOS option\n\tconst r = reactive();\n\tif (newIsR) r.def = v;\n\telse r.wv = v;\n\treturn r;\n    }\n    // Keep original value\n    return v;\n};\nfunction rio (r) {\n    if (!r) r = reactive();\n    return {\n\t// Basic (reactive packaging)\n\tbatch: reactive.batch,\n\tchanged: () => r.ripple(),\n\tcreate: rio,\n\tdepend: () => r.rv,\n\t// Extended (reactive values)\n\tget: (v) => v.rv,\n\tisReactive,\n\tonSet,\n    };\n}\n\nexport function install (name) {\n    instType = name;\n    getInterface(name).set({\n\tlock: true, pristine: true,\n\thandlers: {\n\t    '@init': opInit,\n\t    '@jsv': d => d.js,\n\t    batch: opBatch,\n\t    def: d => d.js.def,\n\t    eager: d => d.js.eager,\n\t    error: d => d.js.error,\n\t    fv: d => reactive.fv(d.js),\n\t    rio: d => rio(d.js),\n\t    rv: d => d.js.rv,\n\t    set: opSet,\n\t    untr: opUntr,\n\t},\n    });\n}\n\n// END\n"],
  "mappings": "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",
  "names": ["getInterface", "runIfCode", "setRO", "reactive", "instType", "jsdef", "def", "jsfn", "fn", "opInit", "d", "mp", "p0", "cmp", "opBatch", "opSet", "js", "en", "opUntr", "isReactive", "v", "onSet", "n", "k", "curVal", "curIsR", "newIsR", "r", "rio", "install", "name"]
}
