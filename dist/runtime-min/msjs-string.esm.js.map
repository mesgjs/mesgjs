{
  "version": 3,
  "sources": ["../../src/runtime/msjs-string.esm.js"],
  "sourcesContent": ["/*\n * Mesgjs @string interface\n * Author: Brian Katzung <briank@kappacs.com>\n * Copyright 2025 by Kappa Computer Solutions, LLC and Brian Katzung\n */\n\nimport { getInstance, getInterface, setRO, typeAccepts } from './runtime.esm.js';\nimport { NANOS } from './vendor.esm.js';\n\n// Join strings together with an optional separator\n// a(join b c with=-) // a-b-c\nfunction opJoin (d) {\n    const { mp, js } = d, sep = mp.at('with') ?? '', parts = [ js ];\n    for (const v of mp.values()) {\n\tconst so = globalThis.$toMsjs(v);\n\tif (typeAccepts(so.msjsType, 'toString')) parts.push(so('toString'));\n    }\n    return parts.join(sep);\n}\n\n// Join strings together with the receiver as separator\n// ,(joining a b c) // a,b,c\nfunction opJoining (d) {\n    const { mp, js } = d, parts = [];\n    for (const v of mp.values()) {\n\tconst so = globalThis.$toMsjs(v);\n\tif (typeAccepts(so.msjsType, 'toString')) parts.push(so('toString'));\n    }\n    return parts.join(js);\n}\n\nfunction opReplace (d, all = false) {\n    const rawPat = d.mp.at(0, ''), pat = (rawPat?.msjsType === '@regex')? rawPat.jsv : rawPat;\n    const rawRep = d.mp.at(1, ''), rep = (rawRep?.msjsType === '@function') ? replWrapper.bind({ msjsfn: rawRep }) : rawRep;\n    return (all ? d.js.replaceAll(pat, rep) : d.js.replace(pat, rep));\n}\n\nfunction opSplit (d) {\n    const rawSep = d.mp.at(0, ''), sep = (rawSep?.msjsType === '@regex') ? rawSep.jsv : rawSep;\n    return d.js.split(sep, d.mp.at(1, Infinity));\n}\n\n// JS-to-Msjs replacement-function wrapper\nfunction replWrapper (...args) {\n    /*\n     * Transform this rather awkward JS signature to a nice, clean Msjs one\n     * (match, p1, p2, ..., pN, offset, string, groups?)\n     */\n    const match = args.shift(), [ groups ] = args.slice(-1), hasG = typeof groups === 'object';\n    const [ offset, string ] = args.splice(hasG ? -3 : -2);\n    const mp = new NANOS(args, { match, offset, string }, hasG ? { groups: new NANOS(groups) } : []);\n    return this.msjsfn('call', mp);\n}\n\nexport function install () {\n    getInterface('@string').set({\n\tfinal: true, lock: true, pristine: true,\n\thandlers: {\n\t    '@init': d => setRO(d.octx, 'js', d.mp.at(0, '').toString()),\n\t    '@jsv': d => d.js,\n\t    '=': d => d.js === d.mp.at(0), // eq\n\t    '>=': d => d.js >= d.mp.at(0), // ge\n\t    '>': d => d.js > d.mp.at(0), // gt\n\t    '+': opJoin,\n\t    '-': opJoining,\n\t    '<=': d => d.js <= d.mp.at(0), // le\n\t    '<': d => d.js < d.mp.at(0), // lt\n\t    '!=': d => d.js !== d.mp.at(0), // ne\n\t    at: d => d.js.at(d.mp.at(0, 0)),\n\t    charAt: d => d.js.charAt(d.mp.at(0, 0)),\n\t    charCodeAt: d => d.js.charCodeAt(d.mp.at(0, 0)),\n\t    codePointAt: d => d.js.codePointAt(d.mp.at(0, 0)),\n\t    endsWith: d => d.js.endsWith(d.mp.at(0, ''), d.mp.at(1, d.js.length)),\n\t    eq: d => d.js === d.mp.at(0),\n\t    escRE: d => RegExp.escape(d.js),\t// regex-escaped version\n\t    ge: d => d.js >= d.mp.at(0),\n\t    gt: d => d.js > d.mp.at(0),\n\t    includes: d => d.js.includes(d.mp.at(0, '')),\n\t    indexOf: d => d.js.indexOf(d.mp.at(0, ''), d.mp.at(1, 0)),\n\t    isWellFormed: d => d.js.isWellFormed(),\n\t    join: opJoin,\n\t    joining: opJoining,\n\t    lastIndexOf: d => d.js.lastIndexOf(d.mp.at(0, ''), d.mp.at(1, Infinity)),\n\t    le: d => d.js <= d.mp.at(0),\n\t    length: d => d.js.length,\n\t    lt: d => d.js < d.mp.at(0),\n\t    ne: d => d.js !== d.mp.at(0),\n\t    normalize: d => d.js.normalize(d.mp.at(0, 'NFC')),\n\t    padEnd: d => d.js.padEnd(d.mp.at(0, 0), d.mp.at(1, ' ')),\n\t    padStart: d => d.js.padStart(d.mp.at(0, 0), d.mp.at(1, ' ')),\n\t    re: d => getInstance('@regex', [ d.js, d.mp.at(0, '') ]),\n\t    repeat: d => d.js.repeat(d.mp.at(0, 0)),\n\t    replace: d => opReplace(d),\n\t    replaceAll: d => opReplace(d, true),\n\t    slice: d => d.js.slice(d.mp.at(0, 0), d.mp.at(1, d.js.length)),\n\t    split: opSplit,\n\t    startsWith: d => d.js.startsWith(d.mp.at(0, ''), d.mp.at(1, 0)),\n\t    substring: d => d.js.substring(d.mp.at(0, 0), d.mp.at(1, d.js.length)),\n\t    toBigInt: d => BigInt(d.js),\n\t    toFloat: d => parseFloat(d.js),\n\t    toInt: d => parseInt(d.js, d.mp.at(0, 10)),\n\t    toLower: d => d.js.toLowerCase(),\n\t    toString: d => d.js,\n\t    toUpper: d => d.js.toUpperCase(),\n\t    trim: d => d.js.trim(),\n\t    trimEnd: d => d.js.trimEnd(),\n\t    trimStart: d => d.js.trimStart(),\n\t    valueOf: d => d.js,\n\t},\n\tcacheHints: {\n\t    '@init': 'pin',\n\t},\n    });\n}\n\n// END\n"],
  "mappings": "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",
  "names": ["getInstance", "getInterface", "setRO", "typeAccepts", "NANOS", "opJoin", "d", "mp", "js", "sep", "parts", "v", "so", "opJoining", "opReplace", "all", "rawPat", "pat", "rawRep", "rep", "replWrapper", "opSplit", "rawSep", "args", "match", "groups", "hasG", "offset", "string", "install"]
}
