{
  "version": 3,
  "sources": ["../../src/runtime/calc-digest.esm.js"],
  "sourcesContent": ["// Algorithm: SHA-256 / SHA-384 / SHA-512\nexport async function calcDigest (source, algorithm) {\n\tconst data = (typeof source === 'string') ? new TextEncoder().encode(source) : source;\n\tconst hashBuffer = await crypto.subtle.digest(algorithm, data);\n\tconst hashArray = Array.from(new Uint8Array(hashBuffer));\n\tconst base64Hash = btoa(String.fromCharCode(...hashArray));\n\treturn `${algorithm.toLowerCase().replace('-', '')}-${base64Hash}`;\n}\n\n// Return the sha512 hash from a potentially multi-hash integrity value\nexport function getIntegritySHA512 (integ) {\n\tconst m = typeof integ === 'string' && integ.match(/(?:^|\\s)(sha512-\\S+)/);\n\tif (m) return m[1];\n}\n\n// END\n"],
  "mappings": "AACA,eAAsBA,EAAYC,EAAQC,EAAW,CACpD,MAAMC,EAAQ,OAAOF,GAAW,SAAY,IAAI,YAAY,EAAE,OAAOA,CAAM,EAAIA,EACzEG,EAAa,MAAM,OAAO,OAAO,OAAOF,EAAWC,CAAI,EACvDE,EAAY,MAAM,KAAK,IAAI,WAAWD,CAAU,CAAC,EACjDE,EAAa,KAAK,OAAO,aAAa,GAAGD,CAAS,CAAC,EACzD,MAAO,GAAGH,EAAU,YAAY,EAAE,QAAQ,IAAK,EAAE,CAAC,IAAII,CAAU,EACjE,CAGO,SAASC,EAAoBC,EAAO,CAC1C,MAAMC,EAAI,OAAOD,GAAU,UAAYA,EAAM,MAAM,sBAAsB,EACzE,GAAIC,EAAG,OAAOA,EAAE,CAAC,CAClB",
  "names": ["calcDigest", "source", "algorithm", "data", "hashBuffer", "hashArray", "base64Hash", "getIntegritySHA512", "integ", "m"]
}
