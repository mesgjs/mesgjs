import{getInterface as p,MsjsFlow as w,runIfCode as l,setRO as y,throwFlow as u}from"./runtime.esm.js";function i(r){const{mp:t,js:e}=r,n=s=>{if(!e.capture)throw s;return e.hasFlowRes&&(e.result=e.flowRes,e.hasFlowRes=e.flowRes=!1),s.message==="stop"},c=(s=e.result)=>r.dop==="atry"?Promise.resolve(s):s;delete e.exception,delete e.result,e.active=!0;try{if(r.dop==="atry")return(async()=>{for(const s of t.values()){e.capture=!1;try{e.result=await l(s)}catch(o){if(n(o))break}}return e.result})();for(const s of t.values()){e.capture=!1;try{e.result=l(s)}catch(o){if(n(o))break}}return e.result}catch(s){if(s instanceof w)throw s;if(e.exception=s,t.has("catchers"))for(const a of t.at("catchers").entries()){const f=globalThis[a[0]];if(!(typeof f!="function"||!(s instanceof f))){if(a[1]?.msjsType!=="@code")return c(a[1]);e.capture=!1;try{a[1]("run")}catch(h){if(!e.capture)throw h;e.hasFlowRes&&(e.result=e.flowRes,e.hasFlowRes=e.flowRes=!1)}return c()}}if(!t.has("catch"))throw s;const o=t.at("catch");if(o?.msjsType!=="@code")return c(o);e.capture=!1;try{o("run")}catch(a){if(!e.capture)throw a;e.hasFlowRes&&(e.result=e.flowRes,e.hasFlowRes=e.flowRes=!1)}}finally{l(t.at("always")),e.active=!1}return c()}function R(r){p(r).set({lock:!0,pristine:!0,handlers:{"@init":t=>y(t.octx,"js",{}),atry:i,error:t=>t.js.exception,message:t=>t.js.exception?.message,name:t=>t.js.exception?.name,next:t=>u(t,"next",r),result:t=>t.js.result,return:t=>{t.js.result=t.mp.at(0)},stop:t=>u(t,"stop",r),try:i}})}export{R as install};
