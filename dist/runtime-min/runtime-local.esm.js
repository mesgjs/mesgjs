import{install as i}from"./msjs-boolean.esm.js";import{install as l}from"./msjs-core.esm.js";import{install as a}from"./js-array.esm.js";import{install as e}from"./msjs-list.esm.js";import{install as s}from"./msjs-kv-iter.esm.js";import{install as o}from"./msjs-loop.esm.js";import{install as m}from"./msjs-map.esm.js";import{install as f}from"./msjs-null.esm.js";import{install as p}from"./msjs-number.esm.js";import{install as u}from"./msjs-promise.esm.js";import{install as c}from"./msjs-reactive.esm.js";import{install as y}from"./msjs-regex.esm.js";import{install as g}from"./msjs-set.esm.js";import{install as S}from"./msjs-string.esm.js";import{install as b}from"./msjs-try.esm.js";import{install as d}from"./msjs-undefined.esm.js";function P(){l("@core"),i(),a("@jsArray"),s("@kvIter"),e("@list"),o("@loop"),m("@map"),f(),p(),u("@promise"),c("@reactive"),y(),g("@set"),S(),b("@try"),d()}import{getInstance as r,NANOS as x}from"./runtime.esm.js";const n=Symbol.for("msjsInstance");function V(t){if(t?.msjsType)return t;switch(typeof t){case"boolean":return r(t?"@true":"@false");case"bigint":case"number":return r("@number",t);case"object":return t===null?r("@null"):t[n]?t[n]:t instanceof x?r("@list",[t]):t instanceof RegExp?r("@regex",t):Array.isArray(t)?r("@jsArray",[t]):t instanceof Map?r("@map",[t]):t instanceof Set?r("@set",[t]):r("@undefined");case"string":return r("@string",t);default:return r("@undefined")}}export{P as installCoreExtensions,V as jsToMSJS,n as msjsInstance};
