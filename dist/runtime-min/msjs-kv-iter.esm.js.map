{
  "version": 3,
  "sources": ["../../src/runtime/msjs-kv-iter.esm.js"],
  "sourcesContent": ["/*\n * Mesgjs @kvIter (key-value iteration) interface\n * Author: Brian Katzung <briank@kappacs.com>\n * Copyright 2025 by Kappa Computer Solutions, LLC and Brian Katzung\n */\n\nimport { getInterface, runIfCode, setRO, throwFlow, typeAccepts } from './runtime.esm.js';\nimport { isIndex, NANOS } from './vendor.esm.js';\nimport { unifiedList } from './unified-list.esm.js';\n\nfunction common (d, keys) {\n\tconst { mp, js } = d, collect = mp.at('collect'), get = js.src.get;\n\tlet result = collect ? new NANOS() : undefined, count = 0;\n\tconst save = (r) => { if (collect) result.push(r); else result = r; };\n\tconst react = (e) => {\n\t\tif (!js.capture) throw e;\n\t\tif (js.hasFlowRes) {\n\t\t\tsave(js.flowRes);\n\t\t\tjs.hasFlowRes = js.flowRes = false;\n\t\t}\n\t\tif (e.message === 'stop') throw e;\n\t\tjs.capture = false;\n\t};\n\tconst onIndex = mp.at('index'), onNamed = mp.at('named'), split = onIndex || onNamed, onBoth = mp.at(1);\n\tjs.active = true;\n\ttry {\n\t\tif (d.dop === 'afor' || d.dop === 'arev') return (async () => {\n\t\t\tfor (const k of keys) {\n\t\t\t\tjs.capture = false;\n\t\t\t\t++count;\n\t\t\t\t[js.key, js.value] = [k, get(k)];\n\t\t\t\tif (split) {\n\t\t\t\t\tif (isIndex(k)) {\n\t\t\t\t\t\tjs.isIndex = true;\n\t\t\t\t\t\ttry { if (onIndex) save(await runIfCode(onIndex)); }\n\t\t\t\t\t\tcatch (e) { react(e); }\n\t\t\t\t\t} else {\n\t\t\t\t\t\tjs.isIndex = false;\n\t\t\t\t\t\ttry { if (onNamed) save(await runIfCode(onNamed)); }\n\t\t\t\t\t\tcatch (e) { react(e); }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttry { if (onBoth) save(await runIfCode(onBoth)); } catch (e) { react(e); }\n\t\t\t}\n\t\t\tif (!count) {\n\t\t\t\tconst ls = d.mp.at('else');\n\t\t\t\tif (ls) return await runIfCode(ls);\n\t\t\t}\n\t\t\treturn result;\n\t\t})();\n\t\tfor (const k of keys) {\n\t\t\tjs.capture = false;\n\t\t\t++count;\n\t\t\t[ js.key, js.value ] = [ k, get(k) ];\n\t\t\tif (split) {\n\t\t\t\tif (isIndex(k)) {\n\t\t\t\t\tjs.isIndex = true;\n\t\t\t\t\ttry { if (onIndex) save(runIfCode(onIndex)); }\n\t\t\t\t\tcatch (e) { react(e); }\n\t\t\t\t} else {\n\t\t\t\t\tjs.isIndex = false;\n\t\t\t\t\ttry { if (onNamed) save(runIfCode(onNamed)); }\n\t\t\t\t\tcatch (e) { react(e); }\n\t\t\t\t}\n\t\t\t}\n\t\t\ttry { if (onBoth) save(runIfCode(onBoth)); } catch (e) { react(e); }\n\t\t}\n\t\tif (!count) {\n\t\t\tconst ls = d.mp.at('else');\n\t\t\tif (ls) return runIfCode(ls);\n\t\t}\n\t\treturn result;\n\t} catch (e) { if (!js.capture) throw e; }\n\tfinally { js.active = false; }\n}\n\n// Return a key/value interface for whatever object we were given\nfunction getKVI (obj) {\n\tconst ot = typeof obj, mt = obj?.msjsType;\n\tlet keys, get;\n\tif ((ot !== 'object' && ot !== 'function') || obj === null) obj = [obj];\n\tif (mt) {\n\t\tif (typeAccepts(mt, 'keyIter')) keys = obj('keyIter');\n\t\telse if (typeAccepts(mt, 'keys')) keys = obj('keys').values();\n\t\tif (typeAccepts(mt, 'at')) get = k => obj('at', [k]);\n\t\telse if (typeAccepts(mt, 'get')) get = k => obj('get', [k]);\n\t} else {\n\t\tobj = unifiedList(obj);\n\t\tif (typeof obj?.keys === 'function') {\n\t\t\tkeys = obj.keys();\n\t\t\tif (Array.isArray(keys)) keys = keys.values();\n\t\t} else if (Array.isArray(obj?.keys)) keys = obj.keys.values();\n\t\tif (typeof obj?.at === 'function') get = (key) => obj.at(key);\n\t\telse if (typeof obj?.get === 'function') get = (key) => obj.get(key);\n\t\telse get = (key) => obj[key];\n\t}\n\tkeys ||= [].values();\n\tget ||= () => undefined;\n\treturn { keys, get };\n}\n\n// (for src bothCode index=indexCode named=namedCode collect=bool else=value)\n// (afor ...)\n// Async version - returns a (JS) promise\nfunction opFor (d) {\n\tconst src = d.js.src = getKVI(d.mp.at(0));\n\treturn common(d, src.keys);\n}\n\n// (rev src bothCode index=indexCode named=namedCode)\n// (arev ...)\n// Async version - returns a (JS) promise\nfunction opRev (d) {\n\tconst src = d.js.src = getKVI(d.mp.at(0));\n\treturn common(d, [...src.keys].reverse());\n}\n\nexport function install (name) {\n\tgetInterface(name).set({\n\t\tlock: true, pristine: true,\n\t\thandlers: {\n\t\t\t'@init': d => setRO(d.octx, 'js', {}),\n\t\t\tactive: d => !!d.js.active,\n\t\t\tafor: opFor,\n\t\t\tarev: opRev,\n\t\t\tfor: opFor,\n\t\t\tisIndex: d => d.js.isIndex,\n\t\t\tkey: d => d.js.key,\n\t\t\tnext: d => throwFlow(d, 'next', name),\n\t\t\trev: opRev,\n\t\t\tstop: d => throwFlow(d, 'stop', name),\n\t\t\tvalue: d => d.js.value,\n\t\t},\n\t});\n}\n\n// END\n"],
  "mappings": "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",
  "names": ["getInterface", "runIfCode", "setRO", "throwFlow", "typeAccepts", "isIndex", "NANOS", "unifiedList", "common", "d", "keys", "mp", "js", "collect", "get", "result", "count", "save", "react", "e", "onIndex", "onNamed", "split", "onBoth", "k", "ls", "getKVI", "obj", "ot", "mt", "key", "opFor", "src", "opRev", "install", "name"]
}
