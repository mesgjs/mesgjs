import{getInterface as n,setRO as e}from"./runtime.esm.js";function p(t){const{octx:s,mp:r}=t,a=r.at(0);e(s,"js",Array.isArray(a)?a:[]),e(t.js,$c.symbols.instance,t.rr,!1),e(t.rr,{jsv:t.js,valueOf:()=>t.js})}function o(t){n(t).set({lock:!0,pristine:!0,handlers:{"@init":p,"@jsv":s=>s.js,"@":s=>s.js.at(parseInt(s.mp.at(0),10)),"=":s=>{s.js[parseInt(s.mp.at(0),10)]=s.mp.at("to")},at:s=>s.js.at(parseInt(s.mp.at(0),10)),concat:s=>s.js.concat(...s.mp.values()),entries:s=>[...s.js.entries()],flat:s=>s.js.flat(s.mp.at(0)),get:s=>s.js.at(parseInt(s.mp.at(0),10)),keys:s=>[...s.js.keys()],keyIter:s=>s.js.keys(),length:s=>s.js.length,pop:s=>s.js.pop(),push:s=>s.js.push(...s.mp.values()),reverse:s=>s.js.reverse(),set:s=>{s.js[parseInt(s.mp.at(0),10)]=s.mp.at("to")},setLength:s=>{s.js.length=parseInt(s.mp.at(0),10)},shift:s=>s.js.shift(),size:s=>s.js.length,slice:s=>s.js.slice(s.mp.at(0),s.mp.at(1)),sort:s=>s.js.sort(s.mp.at(0)),toList:s=>new NANOS().fromEntries(s.js.entries()),toReversed:s=>s.js.toReversed(),toSorted:s=>s.js.toSorted(s.mp.at(0)),unshift:s=>s.js.unshift(...s.mp.values())}})}export{o as install};
