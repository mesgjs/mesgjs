import{getInterface as p,setRO as a}from"./runtime.esm.js";import{unifiedList as j,uniAt as i}from"./unified-list.esm.js";function u(s){const{octx:t,mp:e}=s,n=e.at(0);a(t,"js",Array.isArray(n)?n:[]),a(s.js,$c.symbols.instance,s.rr,!1),a(s.rr,{jsv:s.js,valueOf:()=>s.js})}function r(s){const{mp:t}=s,e=t.has("path")?j(t.at("path")).values():t.values();return i(s.js,[...e],{wrap:!0,defaultFn:()=>{if(t.has("else"))return runIfCode(t.at("else"));throw new Error("Key path not found")}})}function o(s){const t=parseInt(s.mp.at(0),10);return t===t&&(s.js[t]=s.mp.at("to",s.mp.at(1))),s.js}function m(s){p(s).set({lock:!0,pristine:!0,handlers:{"@init":u,"@jsv":t=>t.js,"@":r,"=":o,at:r,concat:t=>t.js.concat(...t.mp.values()),entries:t=>Object.entries(t.js),flat:t=>t.js.flat(t.mp.at(0)),get:r,keys:t=>Object.keys(t.js),keyIter:t=>Object.keys(t.js).values(),length:t=>t.js.length,pop:t=>t.js.pop(),push:t=>t.js.push(...t.mp.values()),reverse:t=>t.js.reverse(),set:o,setKey:t=>(t.js[t.mp.at(0)]=t.mp.at("to",t.mp.at(1)),t.js),setLength:t=>{t.js.length=parseInt(t.mp.at(0),10)},shift:t=>t.js.shift(),size:t=>t.js.length,slice:t=>t.js.slice(t.mp.at(0),t.mp.at(1)),sort:t=>t.js.sort(t.mp.at(0)),toList:t=>new NANOS(t.js),toReversed:t=>t.js.toReversed(),toSorted:t=>t.js.toSorted(t.mp.at(0)),unshift:t=>t.js.unshift(...t.mp.values()),values:t=>Object.values(t.js)}})}export{m as install};
