{
  "version": 3,
  "sources": ["../../src/runtime/msjs-try.esm.js"],
  "sourcesContent": ["/*\n * Mesgjs @try interface\n * Author: Brian Katzung <briank@kappacs.com>\n * Copyright 2025 by Kappa Computer Solutions, LLC and Brian Katzung\n */\n\nimport { getInterface, MsjsFlow, runIfCode, setRO, throwFlow } from './runtime.esm.js';\n\n// @try(try code... catch=code always=code)\nfunction opTry (d) {\n    const { mp, js } = d;\n    delete js.exception;\n    delete js.result;\n    js.active = true;\n    try {\n\tfor (const v of mp.values()) {\n\t    js.capture = false;\n\t    try { js.result = runIfCode(v); }\n\t    catch (ex) {\n\t\tif (!js.capture) throw ex;\n\t\tif (js.hasFlowRes) {\n\t\t    js.result = js.flowRes;\n\t\t    js.hasFlowRes = js.flowRes = false;\n\t\t}\n\t\tif (ex.message === 'stop') break;\n\t    }\n\t}\n    }\n    catch (ex) {\n\tif (ex instanceof MsjsFlow) throw ex;\n\tjs.exception = ex;\n\tif (mp.has('catchers')) for (const en of mp.at('catchers').entries()) {\n\t    const clob = globalThis[en[0]];\n\t    if (typeof clob !== 'function' || !(ex instanceof clob)) continue;\n\t    if (en[1]?.msjsType !== '@code') return en[1];\n\t    js.capture = false;\n\t    try { en[1]('run'); }\n\t    catch (ex) {\n\t\tif (!js.capture) throw ex;\n\t\tif (js.hasFlowRes) {\n\t\t    js.result = js.flowRes;\n\t\t    js.hasFlowRes = js.flowRes = false;\n\t\t}\n\t    }\n\t    return js.result;\n\t}\n\tif (!mp.has('catch')) throw ex;\n\tconst cv = mp.at('catch');\n\tif (cv?.msjsType !== '@code') return cv;\n\tjs.capture = false;\n\ttry { cv('run'); }\n\tcatch (ex) {\n\t    if (!js.capture) throw ex;\n\t    if (js.hasFlowRes) {\n\t\tjs.result = js.flowRes;\n\t\tjs.hasFlowRes = js.flowRes = false;\n\t    }\n\t}\n    }\n    finally {\n\trunIfCode(mp.at('always'));\n\tjs.active = false;\n    }\n    return js.result;\n}\n\nexport function install (name) {\n    getInterface(name).set({\n\tlock: true, pristine: true,\n\thandlers: {\n\t    '@init': d => setRO(d.octx, 'js', {}),\n\t    error: d => d.js.exception,\n\t    message: d => d.js.exception?.message,\n\t    name: d => d.js.exception?.name,\n\t    next: d => throwFlow(d, 'next', name),\n\t    result: d => d.js.result,\n\t    return: d => { d.js.result = d.mp.at(0); },\n\t    stop: d => throwFlow(d, 'stop', name),\n\t    try: opTry,\n\t},\n    });\n}\n\n// END\n"],
  "mappings": "AAMA,OAAS,gBAAAA,EAAc,YAAAC,EAAU,aAAAC,EAAW,SAAAC,EAAO,aAAAC,MAAiB,mBAGpE,SAASC,EAAOC,EAAG,CACf,KAAM,CAAE,GAAAC,EAAI,GAAAC,CAAG,EAAIF,EACnB,OAAOE,EAAG,UACV,OAAOA,EAAG,OACVA,EAAG,OAAS,GACZ,GAAI,CACP,UAAWC,KAAKF,EAAG,OAAO,EAAG,CACzBC,EAAG,QAAU,GACb,GAAI,CAAEA,EAAG,OAASN,EAAUO,CAAC,CAAG,OACzBC,EAAI,CACd,GAAI,CAACF,EAAG,QAAS,MAAME,EAKvB,GAJIF,EAAG,aACHA,EAAG,OAASA,EAAG,QACfA,EAAG,WAAaA,EAAG,QAAU,IAE7BE,EAAG,UAAY,OAAQ,KACxB,CACJ,CACG,OACOA,EAAI,CACd,GAAIA,aAAcT,EAAU,MAAMS,EAElC,GADAF,EAAG,UAAYE,EACXH,EAAG,IAAI,UAAU,EAAG,UAAWI,KAAMJ,EAAG,GAAG,UAAU,EAAE,QAAQ,EAAG,CAClE,MAAMK,EAAO,WAAWD,EAAG,CAAC,CAAC,EAC7B,GAAI,SAAOC,GAAS,YAAc,EAAEF,aAAcE,IAClD,IAAID,EAAG,CAAC,GAAG,WAAa,QAAS,OAAOA,EAAG,CAAC,EAC5CH,EAAG,QAAU,GACb,GAAI,CAAEG,EAAG,CAAC,EAAE,KAAK,CAAG,OACbD,EAAI,CACd,GAAI,CAACF,EAAG,QAAS,MAAME,EACnBF,EAAG,aACHA,EAAG,OAASA,EAAG,QACfA,EAAG,WAAaA,EAAG,QAAU,GAE9B,CACA,OAAOA,EAAG,OACd,CACA,GAAI,CAACD,EAAG,IAAI,OAAO,EAAG,MAAMG,EAC5B,MAAMG,EAAKN,EAAG,GAAG,OAAO,EACxB,GAAIM,GAAI,WAAa,QAAS,OAAOA,EACrCL,EAAG,QAAU,GACb,GAAI,CAAEK,EAAG,KAAK,CAAG,OACVH,EAAI,CACP,GAAI,CAACF,EAAG,QAAS,MAAME,EACnBF,EAAG,aACVA,EAAG,OAASA,EAAG,QACfA,EAAG,WAAaA,EAAG,QAAU,GAE9B,CACG,QACA,CACHN,EAAUK,EAAG,GAAG,QAAQ,CAAC,EACzBC,EAAG,OAAS,EACT,CACA,OAAOA,EAAG,MACd,CAEO,SAASM,EAASC,EAAM,CAC3Bf,EAAae,CAAI,EAAE,IAAI,CAC1B,KAAM,GAAM,SAAU,GACtB,SAAU,CACN,QAAST,GAAKH,EAAMG,EAAE,KAAM,KAAM,CAAC,CAAC,EACpC,MAAOA,GAAKA,EAAE,GAAG,UACjB,QAASA,GAAKA,EAAE,GAAG,WAAW,QAC9B,KAAMA,GAAKA,EAAE,GAAG,WAAW,KAC3B,KAAMA,GAAKF,EAAUE,EAAG,OAAQS,CAAI,EACpC,OAAQT,GAAKA,EAAE,GAAG,OAClB,OAAQA,GAAK,CAAEA,EAAE,GAAG,OAASA,EAAE,GAAG,GAAG,CAAC,CAAG,EACzC,KAAMA,GAAKF,EAAUE,EAAG,OAAQS,CAAI,EACpC,IAAKV,CACT,CACG,CAAC,CACL",
  "names": ["getInterface", "MsjsFlow", "runIfCode", "setRO", "throwFlow", "opTry", "d", "mp", "js", "v", "ex", "en", "clob", "cv", "install", "name"]
}
